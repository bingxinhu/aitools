{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/schedule/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/schedule/index.vue","mtime":1669257735083},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/babel.config.js","mtime":1669257735055},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA,SAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,QAAA,QAAA,mBAAA;AAEA,eAAA;EACA,IAAA,EAAA,cAAA;EACA,UAAA,EAAA,CAEA,CAAA;EACA,IAAA,kBAAA;IACA,OAAA;MACA;MACA,OAAA,EAAA,IAAA;MACA,EAAA,EAAA,CAAA;MACA;MACA,GAAA,EAAA,EAAA;MACA;MACA,MAAA,EAAA,IAAA;MACA;MACA,QAAA,EAAA,IAAA;MACA;MACA,KAAA,EAAA,CAAA;MACA;MACA,KAAA,EAAA,EAAA;MACA;MACA,IAAA,EAAA,KAAA;MACA,MAAA,EAAA,KAAA;MACA;MACA,WAAA,EAAA,EAAA;MACA,UAAA,EAAA,EAAA;MACA,eAAA,EAAA,EAAA;MACA,aAAA,EAAA,EAAA;MACA;MACA,WAAA,EAAA;QACA,SAAA,EAAA,CAAA;QACA,QAAA,EAAA,EAAA;QACA,OAAA,EAAA,SAAA;QACA,QAAA,EAAA,SAAA;QACA,MAAA,EAAA;MAEA,CAAA;MACA;MACA,IAAA,EAAA,CACA,CAAA;MACA;MACA,KAAA,EAAA;QACA,KAAA,EAAA,CAAA;UAAA,QAAA,EAAA,IAAA;UAAA,OAAA,EAAA,QAAA;UAAA,OAAA,EAAA;QAAA,CAAA,CAAA;QACA,OAAA,EAAA,CAAA;UAAA,QAAA,EAAA,IAAA;UAAA,OAAA,EAAA,QAAA;UAAA,OAAA,EAAA;QAAA,CAAA,CAAA;QACA,QAAA,EAAA,CAAA;UAAA,QAAA,EAAA,IAAA;UAAA,OAAA,EAAA,UAAA;UAAA,OAAA,EAAA;QAAA,CAAA,CAAA;QACA,cAAA,EAAA,CAAA;UAAA,QAAA,EAAA,IAAA;UAAA,OAAA,EAAA,aAAA;UAAA,OAAA,EAAA;QAAA,CAAA,CAAA;QACA,YAAA,EAAA,CAAA;UAAA,QAAA,EAAA,IAAA;UAAA,OAAA,EAAA,UAAA;UAAA,OAAA,EAAA;QAAA,CAAA,CAAA;QACA,MAAA,EAAA,CAAA;UAAA,QAAA,EAAA,IAAA;UAAA,OAAA,EAAA,QAAA;UAAA,OAAA,EAAA;QAAA,CAAA;MACA;IACA,CAAA;EACA,CAAA;EACA,OAAA,qBAAA;IAAA;IACA,IAAA,CAAA,OAAA,EAAA;IACA,IAAA,CAAA,QAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;MACA,KAAA,CAAA,eAAA,GAAA,QAAA,CAAA,IAAA;IACA,CAAA,CAAA;IAEA,IAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;MACA,KAAA,CAAA,aAAA,GAAA,QAAA,CAAA,IAAA;IACA,CAAA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,aACA,OAAA,qBAAA;MAAA;MACA,IAAA,CAAA,OAAA,GAAA,IAAA;MACA,UAAA,CAAA,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;QACA,MAAA,CAAA,UAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;QACA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;QACA,MAAA,CAAA,OAAA,GAAA,KAAA;MACA,CAAA,CAAA;IACA,CAAA;IACA;IACA,MAAA,oBAAA;MACA,IAAA,CAAA,IAAA,GAAA,KAAA;MACA,IAAA,CAAA,KAAA,EAAA;IACA,CAAA;IACA;IACA,KAAA,mBAAA;MACA,IAAA,CAAA,IAAA,GAAA;QACA,KAAA,EAAA,SAAA;QACA,OAAA,EAAA,SAAA;QACA,QAAA,EAAA,SAAA;QACA,cAAA,EAAA,SAAA;QACA,YAAA,EAAA,SAAA;QACA,IAAA,EAAA,SAAA;QACA,aAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,OAAA,EAAA,CAAA;QACA,MAAA,EAAA;MACA,CAAA;MACA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA;IACA,CAAA;IACA,cAAA,0BAAA,GAAA,EAAA;MACA,OAAA,IAAA,CAAA,eAAA,CAAA,IAAA,CAAA,eAAA,EAAA,GAAA,CAAA,QAAA,CAAA;IACA,CAAA;IACA,YAAA,wBAAA,GAAA,EAAA;MACA,OAAA,IAAA,CAAA,eAAA,CAAA,IAAA,CAAA,aAAA,EAAA,GAAA,CAAA,MAAA,CAAA;IACA,CAAA;IACA,aACA,WAAA,yBAAA;MACA,IAAA,CAAA,WAAA,CAAA,SAAA,GAAA,CAAA;MACA,IAAA,CAAA,OAAA,EAAA;IACA,CAAA;IACA,aACA,UAAA,wBAAA;MACA,IAAA,CAAA,SAAA,GAAA,EAAA;MACA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA;MACA,IAAA,CAAA,WAAA,EAAA;IACA,CAAA;IACA,aACA,SAAA,uBAAA;MACA,IAAA,CAAA,KAAA,EAAA;MACA,IAAA,CAAA,IAAA,GAAA,IAAA;MACA,IAAA,CAAA,KAAA,GAAA,QAAA;MACA,IAAA,CAAA,MAAA,GAAA,KAAA;IACA,CAAA;IACA;IACA,qBAAA,iCAAA,SAAA,EAAA;MACA,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAA,UAAA,IAAA;QAAA,OAAA,IAAA,CAAA,KAAA;MAAA,EAAA;MACA,IAAA,CAAA,MAAA,GAAA,SAAA,CAAA,MAAA,KAAA,CAAA;MACA,IAAA,CAAA,QAAA,GAAA,CAAA,SAAA,CAAA,MAAA;IACA,CAAA;IACA,aACA,YAAA,wBAAA,GAAA,EAAA;MAAA;MACA,IAAA,CAAA,KAAA,EAAA;MACA,IAAA,KAAA,GAAA,GAAA,CAAA,KAAA,IAAA,IAAA,CAAA,GAAA;MACA,SAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;QACA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;QACA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;QACA,MAAA,CAAA,IAAA,CAAA,aAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAA;QACA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA;QACA,MAAA,CAAA,IAAA,CAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA;QACA,MAAA,CAAA,IAAA,GAAA,IAAA;QACA,MAAA,CAAA,KAAA,GAAA,QAAA;QACA,MAAA,CAAA,MAAA,GAAA,IAAA;MACA,CAAA,CAAA;IACA,CAAA;IACA;IACA,UAAA,EAAA,sBAAA;MAAA;MACA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;QACA,IAAA,KAAA,EAAA;UACA,IAAA,MAAA,CAAA,IAAA,CAAA,KAAA,KAAA,SAAA,EAAA;YACA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,aAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,OAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA;YACA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;cACA,IAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;gBACA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA;gBACA,MAAA,CAAA,IAAA,GAAA,KAAA;gBACA,MAAA,CAAA,OAAA,EAAA;cACA,CAAA,MAAA;gBACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA;cACA;YACA,CAAA,CAAA;UACA,CAAA,MAAA;YACA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,aAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,CAAA;YACA,MAAA,CAAA,IAAA,CAAA,OAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA;YACA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;cACA,IAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;gBACA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA;gBACA,MAAA,CAAA,IAAA,GAAA,KAAA;gBACA,MAAA,CAAA,OAAA,EAAA;cACA,CAAA,MAAA;gBACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA;cACA;YACA,CAAA,CAAA;UACA;QACA;MACA,CAAA,CAAA;IACA,CAAA;IACA,aACA,YAAA,wBAAA,GAAA,EAAA;MAAA;MACA,IAAA,GAAA,GAAA,GAAA,CAAA,KAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,IAAA,CAAA,GAAA;MACA,IAAA,CAAA,QAAA,CAAA,YAAA,GAAA,GAAA,GAAA,QAAA,EAAA,IAAA,EAAA;QACA,iBAAA,EAAA,IAAA;QACA,gBAAA,EAAA,IAAA;QACA,IAAA,EAAA;MACA,CAAA,CAAA,CAAA,IAAA,CAAA,YAAA;QACA,OAAA,SAAA,CAAA;UAAA,KAAA,EAAA;QAAA,CAAA,CAAA;MACA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;QACA,IAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;UACA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA;UACA,MAAA,CAAA,IAAA,GAAA,KAAA;UACA,MAAA,CAAA,OAAA,EAAA;QACA,CAAA,MAAA;UACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA;QACA;MACA,CAAA,CAAA,CAAA,KAAA,CAAA,YAAA,CAAA,CAAA,CAAA;IACA,CAAA;IACA,aACA,WAAA,uBAAA,GAAA,EAAA;MAAA;MACA,IAAA,CAAA,QAAA,CAAA,YAAA,GAAA,GAAA,CAAA,KAAA,GAAA,QAAA,EAAA,IAAA,EAAA;QACA,iBAAA,EAAA,IAAA;QACA,gBAAA,EAAA,IAAA;QACA,IAAA,EAAA;MACA,CAAA,CAAA,CAAA,IAAA,CAAA,YAAA;QACA,OAAA,QAAA,CAAA,GAAA,CAAA,KAAA,CAAA;MACA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;QACA,IAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;UACA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA;UACA,MAAA,CAAA,IAAA,GAAA,KAAA;UACA,MAAA,CAAA,OAAA,EAAA;QACA,CAAA,MAAA;UACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA;QACA;MACA,CAAA,CAAA,CAAA,KAAA,CAAA,YAAA,CAAA,CAAA,CAAA;IACA,CAAA;IACA,aACA,YAAA,wBAAA,GAAA,EAAA;MAAA;MACA,IAAA,CAAA,QAAA,CAAA,YAAA,GAAA,GAAA,CAAA,KAAA,GAAA,QAAA,EAAA,IAAA,EAAA;QACA,iBAAA,EAAA,IAAA;QACA,gBAAA,EAAA,IAAA;QACA,IAAA,EAAA;MACA,CAAA,CAAA,CAAA,IAAA,CAAA,YAAA;QACA,OAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA;MACA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;QACA,IAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;UACA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA;UACA,MAAA,CAAA,IAAA,GAAA,KAAA;UACA,MAAA,CAAA,OAAA,EAAA;QACA,CAAA,MAAA;UACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA;QACA;MACA,CAAA,CAAA,CAAA,KAAA,CAAA,YAAA,CAAA,CAAA,CAAA;IACA,CAAA;IACA,SAAA,uBAAA;MACA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;QAAA,IAAA,EAAA,SAAA;QAAA,MAAA,EAAA,CAAA;MAAA,CAAA,CAAA;IACA;EACA;AACA,CAAA","sourcesContent":["\n<template>\n  <div>\n    <BasicLayout>\n      <template #wrapper>\n        <el-card class=\"box-card\">\n          <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\" label-position=\"left\" label-width=\"68px\">\n            <el-form-item label=\"名称\" prop=\"jobName\">\n              <el-input\n                v-model=\"queryParams.jobName\"\n                placeholder=\"请输入名称\"\n                clearable\n                size=\"small\"\n                @keyup.enter.native=\"handleQuery\"\n              />\n            </el-form-item>\n            <el-form-item label=\"任务分组\" prop=\"jobGroup\">\n              <el-select\n                v-model=\"queryParams.jobGroup\"\n                placeholder=\"定时任务任务分组\"\n                clearable\n                size=\"small\"\n              >\n                <el-option\n                  v-for=\"dict in jobGroupOptions\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                />\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"状态\" prop=\"status\">\n              <el-select\n                v-model=\"queryParams.status\"\n                placeholder=\"定时任务状态\"\n                clearable\n                size=\"small\"\n              >\n                <el-option\n                  v-for=\"dict in statusOptions\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                />\n              </el-select>\n            </el-form-item>\n\n            <el-form-item>\n              <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n              <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n            </el-form-item>\n          </el-form>\n\n          <el-row :gutter=\"10\" class=\"mb8\">\n            <el-col :span=\"1.5\">\n              <el-button\n                v-permisaction=\"['job:sysJob:add']\"\n                type=\"primary\"\n                icon=\"el-icon-plus\"\n                size=\"mini\"\n                @click=\"handleAdd\"\n              >新增\n              </el-button>\n            </el-col>\n            <el-col :span=\"1.5\">\n              <el-button\n                v-permisaction=\"['job:sysJob:edit']\"\n                type=\"success\"\n                icon=\"el-icon-edit\"\n                size=\"mini\"\n                :disabled=\"single\"\n                @click=\"handleUpdate\"\n              >修改\n              </el-button>\n            </el-col>\n            <el-col :span=\"1.5\">\n              <el-button\n                v-permisaction=\"['job:sysJob:remove']\"\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                size=\"mini\"\n                :disabled=\"multiple\"\n                @click=\"handleDelete\"\n              >删除\n              </el-button>\n            </el-col>\n            <el-col :span=\"1.5\">\n              <el-button\n                v-permisaction=\"['job:sysJob:log']\"\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                size=\"mini\"\n                @click=\"handleLog\"\n              >日志\n              </el-button>\n\n            </el-col>\n          </el-row>\n\n          <el-table v-loading=\"loading\" :data=\"sysjobList\" @selection-change=\"handleSelectionChange\">\n            <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n            <el-table-column\n              label=\"编码\"\n              align=\"center\"\n              prop=\"jobId\"\n              :show-overflow-tooltip=\"true\"\n            />\n            <el-table-column\n              label=\"名称\"\n              align=\"center\"\n              prop=\"jobName\"\n              :show-overflow-tooltip=\"true\"\n            />\n            <el-table-column\n              label=\"任务分组\"\n              align=\"center\"\n              prop=\"jobGroup\"\n              :formatter=\"jobGroupFormat\"\n              width=\"100\"\n            >\n              <template slot-scope=\"scope\">\n                {{ jobGroupFormat(scope.row) }}\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"cron表达式\"\n              align=\"center\"\n              prop=\"cronExpression\"\n              :show-overflow-tooltip=\"true\"\n            />\n            <el-table-column\n              label=\"调用目标\"\n              align=\"center\"\n              prop=\"invokeTarget\"\n              :show-overflow-tooltip=\"true\"\n            />\n            <el-table-column\n              label=\"状态\"\n              align=\"center\"\n              prop=\"status\"\n              :formatter=\"statusFormat\"\n              width=\"100\"\n            >\n              <template slot-scope=\"scope\">\n                {{ statusFormat(scope.row) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  v-permisaction=\"['job:sysJob:edit']\"\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-edit\"\n                  @click=\"handleUpdate(scope.row)\"\n                >修改\n                </el-button>\n                <el-button\n                  v-if=\"scope.row.entry_id!==0&& scope.row.status!=1\"\n                  v-permisaction=\"['job:sysJob:remove']\"\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-edit\"\n                  @click=\"handleRemove(scope.row)\"\n                >停止\n                </el-button>\n                <el-button\n                  v-if=\"scope.row.entry_id==0 && scope.row.status!=1\"\n                  v-permisaction=\"['job:sysJob:start']\"\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-edit\"\n                  @click=\"handleStart(scope.row)\"\n                >启动\n                </el-button>\n                <el-button\n                  v-permisaction=\"['job:sysJob:remove']\"\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-delete\"\n                  @click=\"handleDelete(scope.row)\"\n                >删除\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n\n          <pagination\n            v-show=\"total>0\"\n            :total=\"total\"\n            :page.sync=\"queryParams.pageIndex\"\n            :limit.sync=\"queryParams.pageSize\"\n            @pagination=\"getList\"\n          />\n\n          <!-- 添加或修改对话框 -->\n          <el-dialog v-dialogDrag :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body :close-on-click-modal=\"false\">\n            <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\n              <el-row>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"名称\" prop=\"jobName\">\n                    <el-input\n                      v-model=\"form.jobName\"\n                      placeholder=\"名称\"\n                    />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"任务分组\" prop=\"jobGroup\">\n                    <el-select\n                      v-model=\"form.jobGroup\"\n                      placeholder=\"请选择\"\n                    >\n                      <el-option\n                        v-for=\"dict in jobGroupOptions\"\n                        :key=\"dict.value\"\n                        :label=\"dict.label\"\n                        :value=\"dict.value\"\n                      />\n                    </el-select>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"24\">\n                  <el-form-item label=\"调用目标\" prop=\"invokeTarget\">\n                    <span slot=\"label\">\n                      调用目标\n                      <el-tooltip placement=\"top\">\n                        <div slot=\"content\">\n                          调用示例：func (t *EXEC) ExamplesNoParam(){..} 填写 ExamplesNoParam 即可；\n                          <br>参数说明：目前不支持带参调用\n                        </div>\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input\n                      v-model=\"form.invokeTarget\"\n                      placeholder=\"调用目标\"\n                    />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"24\">\n                  <el-form-item label=\"目标参数\" prop=\"args\">\n                    <span slot=\"label\">\n                      目标参数\n                      <el-tooltip placement=\"top\">\n                        <div slot=\"content\">\n                          参数示例：有参：请以string格式填写；无参：为空；\n                          <br>参数说明：目前仅支持函数调用\n                        </div>\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input\n                      v-model=\"form.args\"\n                      placeholder=\"目标参数\"\n                    />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"cron表达式\" prop=\"cronExpression\">\n                    <el-input\n                      v-model=\"form.cronExpression\"\n                      placeholder=\"cron表达式\"\n                    />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"是否并发\" prop=\"concurrent\">\n                    <el-radio-group v-model=\"form.concurrent\" size=\"small\">\n                      <el-radio-button label=\"0\">允许</el-radio-button>\n                      <el-radio-button label=\"1\">禁止</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"24\">\n                  <el-form-item label=\"调用类型\" prop=\"jobType\">\n                    <el-radio-group v-model=\"form.jobType\" size=\"small\">\n                      <el-radio-button label=\"1\">接口</el-radio-button>\n                      <el-radio-button label=\"2\">函数</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n                </el-col>\n\n                <el-col :span=\"24\">\n                  <el-form-item label=\"执行策略\" prop=\"misfirePolicy\">\n                    <el-radio-group v-model=\"form.misfirePolicy\" size=\"small\">\n                      <el-radio-button label=\"1\">立即执行</el-radio-button>\n                      <el-radio-button label=\"2\">执行一次</el-radio-button>\n                      <el-radio-button label=\"3\">放弃执行</el-radio-button>\n                    </el-radio-group>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item label=\"状态\" prop=\"status\">\n                    <el-select\n                      v-model=\"form.status\"\n                      placeholder=\"请选择\"\n                    >\n                      <el-option\n                        v-for=\"dict in statusOptions\"\n                        :key=\"dict.value\"\n                        :label=\"dict.label\"\n                        :value=\"dict.value\"\n                      />\n                    </el-select>\n                  </el-form-item>\n                </el-col>\n              </el-row>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n              <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n              <el-button @click=\"cancel\">取 消</el-button>\n            </div>\n          </el-dialog>\n\n        </el-card>\n      </template>\n    </BasicLayout>\n  </div>\n</template>\n\n<script>\nimport { addSysJob, delSysJob, getSysJob, listSysJob, updateSysJob, removeJob, startJob } from '@/api/job/sys-job'\n\nexport default {\n  name: 'SysJobManage',\n  components: {\n\n  },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      id: 0,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      isEdit: false,\n      // 类型数据字典\n      typeOptions: [],\n      sysjobList: [],\n      jobGroupOptions: [],\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        jobName: undefined,\n        jobGroup: undefined,\n        status: undefined\n\n      },\n      // 表单参数\n      form: {\n      },\n      // 表单校验\n      rules: {\n        jobId: [{ required: true, message: '编码不能为空', trigger: 'blur' }],\n        jobName: [{ required: true, message: '名称不能为空', trigger: 'blur' }],\n        jobGroup: [{ required: true, message: '任务分组不能为空', trigger: 'blur' }],\n        cronExpression: [{ required: true, message: 'cron表达式不能为空', trigger: 'blur' }],\n        invokeTarget: [{ required: true, message: '调用目标不能为空', trigger: 'blur' }],\n        status: [{ required: true, message: '状态不能为空', trigger: 'blur' }]\n      }\n    }\n  },\n  created() {\n    this.getList()\n    this.getDicts('sys_job_group').then(response => {\n      this.jobGroupOptions = response.data\n    })\n\n    this.getDicts('sys_job_status').then(response => {\n      this.statusOptions = response.data\n    })\n  },\n  methods: {\n    /** 查询参数列表 */\n    getList() {\n      this.loading = true\n      listSysJob(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.sysjobList = response.data.list\n        this.total = response.data.count\n        this.loading = false\n      })\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        jobId: undefined,\n        jobName: undefined,\n        jobGroup: undefined,\n        cronExpression: undefined,\n        invokeTarget: undefined,\n        args: undefined,\n        misfirePolicy: 1,\n        concurrent: 1,\n        jobType: 1,\n        status: undefined\n      }\n      this.resetForm('form')\n    },\n    jobGroupFormat(row) {\n      return this.selectDictLabel(this.jobGroupOptions, row.jobGroup)\n    },\n    statusFormat(row) {\n      return this.selectDictLabel(this.statusOptions, row.status)\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageIndex = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.open = true\n      this.title = '添加定时任务'\n      this.isEdit = false\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.jobId)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      const jobId = row.jobId || this.ids\n      getSysJob(jobId).then(response => {\n        this.form = response.data\n        this.form.status = String(this.form.status)\n        this.form.misfirePolicy = String(this.form.misfirePolicy)\n        this.form.concurrent = String(this.form.concurrent)\n        this.form.jobType = String(this.form.jobType)\n        this.open = true\n        this.title = '修改定时任务'\n        this.isEdit = true\n      })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.jobId !== undefined) {\n            this.form.status = parseInt(this.form.status)\n            this.form.misfirePolicy = parseInt(this.form.misfirePolicy)\n            this.form.concurrent = parseInt(this.form.concurrent)\n            this.form.jobType = parseInt(this.form.jobType)\n            updateSysJob(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            this.form.status = parseInt(this.form.status)\n            this.form.misfirePolicy = parseInt(this.form.misfirePolicy)\n            this.form.concurrent = parseInt(this.form.concurrent)\n            this.form.jobType = parseInt(this.form.jobType)\n            addSysJob(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const Ids = (row.jobId && [row.jobId]) || this.ids\n      this.$confirm('是否确认删除编号为\"' + Ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delSysJob({ 'ids': Ids })\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    },\n    /** 开始按钮操作 */\n    handleStart(row) {\n      this.$confirm('是否确认启动编号为\"' + row.jobId + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return startJob(row.jobId)\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    },\n    /** 停止按钮操作 */\n    handleRemove(row) {\n      this.$confirm('是否确认关闭编号为\"' + row.jobId + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return removeJob(row.jobId)\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    },\n    handleLog() {\n      this.$router.push({ name: 'job_log', params: { }})\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/schedule"}]}