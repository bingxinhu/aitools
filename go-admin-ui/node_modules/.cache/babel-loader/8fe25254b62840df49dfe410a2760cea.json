{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/profile/userAvatar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/profile/userAvatar.vue","mtime":1669257735083},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/babel.config.js","mtime":1669257735055},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKaW1wb3J0IHsgVnVlQ3JvcHBlciB9IGZyb20gJ3Z1ZS1jcm9wcGVyJzsKaW1wb3J0IHsgdXBsb2FkQXZhdGFyIH0gZnJvbSAnQC9hcGkvYWRtaW4vc3lzLXVzZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVnVlQ3JvcHBlcjogVnVlQ3JvcHBlcgogIH0sCiAgcHJvcHM6IHsKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB2dWUvcmVxdWlyZS1kZWZhdWx0LXByb3AKICAgIHVzZXI6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5piv5ZCm5pi+56S65by55Ye65bGCCiAgICAgIG9wZW46IGZhbHNlLAogICAgICAvLyDlvLnlh7rlsYLmoIfpopgKICAgICAgdGl0bGU6ICfkv67mlLnlpLTlg48nLAogICAgICBvcHRpb25zOiB7CiAgICAgICAgaW1nOiBzdG9yZS5nZXR0ZXJzLmF2YXRhciwKICAgICAgICAvLyDoo4Hliarlm77niYfnmoTlnLDlnYAKICAgICAgICBhdXRvQ3JvcDogdHJ1ZSwKICAgICAgICAvLyDmmK/lkKbpu5jorqTnlJ/miJDmiKrlm77moYYKICAgICAgICBhdXRvQ3JvcFdpZHRoOiAyMDAsCiAgICAgICAgLy8g6buY6K6k55Sf5oiQ5oiq5Zu+5qGG5a695bqmCiAgICAgICAgYXV0b0Nyb3BIZWlnaHQ6IDIwMCwKICAgICAgICAvLyDpu5jorqTnlJ/miJDmiKrlm77moYbpq5jluqYKICAgICAgICBmaXhlZEJveDogdHJ1ZSAvLyDlm7rlrprmiKrlm77moYblpKflsI8g5LiN5YWB6K645pS55Y+YCiAgICAgIH0sCgogICAgICBwcmV2aWV3czoge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDnvJbovpHlpLTlg48KICAgIGVkaXRDcm9wcGVyOiBmdW5jdGlvbiBlZGl0Q3JvcHBlcigpIHsKICAgICAgdGhpcy5vcGVuID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDopobnm5bpu5jorqTnmoTkuIrkvKDooYzkuLoKICAgIHJlcXVlc3RVcGxvYWQ6IGZ1bmN0aW9uIHJlcXVlc3RVcGxvYWQoKSB7fSwKICAgIC8vIOWQkeW3puaXi+i9rAogICAgcm90YXRlTGVmdDogZnVuY3Rpb24gcm90YXRlTGVmdCgpIHsKICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLnJvdGF0ZUxlZnQoKTsKICAgIH0sCiAgICAvLyDlkJHlj7Pml4vovawKICAgIHJvdGF0ZVJpZ2h0OiBmdW5jdGlvbiByb3RhdGVSaWdodCgpIHsKICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLnJvdGF0ZVJpZ2h0KCk7CiAgICB9LAogICAgLy8g5Zu+54mH57yp5pS+CiAgICBjaGFuZ2VTY2FsZTogZnVuY3Rpb24gY2hhbmdlU2NhbGUobnVtKSB7CiAgICAgIG51bSA9IG51bSB8fCAxOwogICAgICB0aGlzLiRyZWZzLmNyb3BwZXIuY2hhbmdlU2NhbGUobnVtKTsKICAgIH0sCiAgICAvLyDkuIrkvKDpooTlpITnkIYKICAgIGJlZm9yZVVwbG9hZDogZnVuY3Rpb24gYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgaWYgKGZpbGUudHlwZS5pbmRleE9mKCdpbWFnZS8nKSA9PT0gLTEpIHsKICAgICAgICB0aGlzLm1zZ0Vycm9yKCfmlofku7bmoLzlvI/plJnor6/vvIzor7fkuIrkvKDlm77niYfnsbvlnoss5aaC77yaSlBH77yMUE5H5ZCO57yA55qE5paH5Lu244CCJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLm9wdGlvbnMuaW1nID0gcmVhZGVyLnJlc3VsdDsKICAgICAgICB9OwogICAgICB9CiAgICB9LAogICAgLy8g5LiK5Lyg5Zu+54mHCiAgICB1cGxvYWRJbWc6IGZ1bmN0aW9uIHVwbG9hZEltZygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHRoaXMuJHJlZnMuY3JvcHBlci5nZXRDcm9wQmxvYihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndXBsb2FkW10nLCBkYXRhKTsKICAgICAgICB1cGxvYWRBdmF0YXIoZm9ybURhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzMi5vcGVuID0gZmFsc2U7CiAgICAgICAgICAgIF90aGlzMi5vcHRpb25zLmltZyA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEkgKyByZXNwb25zZS5kYXRhOwogICAgICAgICAgICBfdGhpczIubXNnU3VjY2VzcyhyZXNwb25zZS5tc2cpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXMyLm1zZ0Vycm9yKHJlc3BvbnNlLm1zZyk7CiAgICAgICAgICB9CiAgICAgICAgICBfdGhpczIuJHJlZnMuY3JvcHBlci5jbGVhckNyb3AoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5a6e5pe26aKE6KeICiAgICByZWFsVGltZTogZnVuY3Rpb24gcmVhbFRpbWUoZGF0YSkgewogICAgICB0aGlzLnByZXZpZXdzID0gZGF0YTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["userAvatar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAA,KAAA,MAAA,SAAA;AACA,SAAA,UAAA,QAAA,aAAA;AACA,SAAA,YAAA,QAAA,sBAAA;AAEA,eAAA;EACA,UAAA,EAAA;IAAA,UAAA,EAAA;EAAA,CAAA;EACA,KAAA,EAAA;IACA;IACA,IAAA,EAAA;MAAA,IAAA,EAAA;IAAA;EACA,CAAA;EACA,IAAA,kBAAA;IACA,OAAA;MACA;MACA,IAAA,EAAA,KAAA;MACA;MACA,KAAA,EAAA,MAAA;MACA,OAAA,EAAA;QACA,GAAA,EAAA,KAAA,CAAA,OAAA,CAAA,MAAA;QAAA;QACA,QAAA,EAAA,IAAA;QAAA;QACA,aAAA,EAAA,GAAA;QAAA;QACA,cAAA,EAAA,GAAA;QAAA;QACA,QAAA,EAAA,IAAA,CAAA;MACA,CAAA;;MACA,QAAA,EAAA,CAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA;IACA,WAAA,yBAAA;MACA,IAAA,CAAA,IAAA,GAAA,IAAA;IACA,CAAA;IACA;IACA,aAAA,2BAAA,CACA,CAAA;IACA;IACA,UAAA,wBAAA;MACA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,EAAA;IACA,CAAA;IACA;IACA,WAAA,yBAAA;MACA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,WAAA,EAAA;IACA,CAAA;IACA;IACA,WAAA,uBAAA,GAAA,EAAA;MACA,GAAA,GAAA,GAAA,IAAA,CAAA;MACA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,CAAA;IACA,CAAA;IACA;IACA,YAAA,wBAAA,IAAA,EAAA;MAAA;MACA,IAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA;QACA,IAAA,CAAA,QAAA,CAAA,gCAAA,CAAA;MACA,CAAA,MAAA;QACA,IAAA,MAAA,GAAA,IAAA,UAAA,EAAA;QACA,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA;QACA,MAAA,CAAA,MAAA,GAAA,YAAA;UACA,KAAA,CAAA,OAAA,CAAA,GAAA,GAAA,MAAA,CAAA,MAAA;QACA,CAAA;MACA;IACA,CAAA;IACA;IACA,SAAA,uBAAA;MAAA;MACA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,WAAA,CAAA,UAAA,IAAA,EAAA;QACA,IAAA,QAAA,GAAA,IAAA,QAAA,EAAA;QACA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,IAAA,CAAA;QACA,YAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;UACA,IAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;YACA,MAAA,CAAA,IAAA,GAAA,KAAA;YACA,MAAA,CAAA,OAAA,CAAA,GAAA,GAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,IAAA;YACA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA;UACA,CAAA,MAAA;YACA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA;UACA;UACA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,SAAA,EAAA;QACA,CAAA,CAAA;MACA,CAAA,CAAA;IACA,CAAA;IACA;IACA,QAAA,oBAAA,IAAA,EAAA;MACA,IAAA,CAAA,QAAA,GAAA,IAAA;IACA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <div>\n    <img :src=\"options.img\" title=\"点击上传头像\" class=\"img-circle img-lg\" @click=\"editCropper()\">\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"800px\" :close-on-click-modal=\"false\">\n      <el-row>\n        <el-col :xs=\"24\" :md=\"12\" :style=\"{height: '350px'}\">\n          <vue-cropper\n            ref=\"cropper\"\n            :img=\"options.img\"\n            :info=\"true\"\n            :auto-crop=\"options.autoCrop\"\n            :auto-crop-width=\"options.autoCropWidth\"\n            :auto-crop-height=\"options.autoCropHeight\"\n            :fixed-box=\"options.fixedBox\"\n            @realTime=\"realTime\"\n          />\n        </el-col>\n        <el-col :xs=\"24\" :md=\"12\" :style=\"{height: '350px'}\">\n          <div class=\"avatar-upload-preview\">\n            <img :src=\"previews.url\" :style=\"previews.img\">\n          </div>\n        </el-col>\n      </el-row>\n      <br>\n      <el-row>\n        <el-col :lg=\"2\" :md=\"2\">\n          <el-upload action=\"#\" :http-request=\"requestUpload\" :show-file-list=\"false\" :before-upload=\"beforeUpload\">\n            <el-button size=\"small\">\n              上传\n              <i class=\"el-icon-upload el-icon--right\" />\n            </el-button>\n          </el-upload>\n        </el-col>\n        <el-col :lg=\"{span: 1, offset: 2}\" :md=\"2\">\n          <el-button icon=\"el-icon-plus\" size=\"small\" @click=\"changeScale(1)\" />\n        </el-col>\n        <el-col :lg=\"{span: 1, offset: 1}\" :md=\"2\">\n          <el-button icon=\"el-icon-minus\" size=\"small\" @click=\"changeScale(-1)\" />\n        </el-col>\n        <el-col :lg=\"{span: 1, offset: 1}\" :md=\"2\">\n          <el-button icon=\"el-icon-refresh-left\" size=\"small\" @click=\"rotateLeft()\" />\n        </el-col>\n        <el-col :lg=\"{span: 1, offset: 1}\" :md=\"2\">\n          <el-button icon=\"el-icon-refresh-right\" size=\"small\" @click=\"rotateRight()\" />\n        </el-col>\n        <el-col :lg=\"{span: 2, offset: 6}\" :md=\"2\">\n          <el-button type=\"primary\" size=\"small\" @click=\"uploadImg()\">提 交</el-button>\n        </el-col>\n      </el-row>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport store from '@/store'\nimport { VueCropper } from 'vue-cropper'\nimport { uploadAvatar } from '@/api/admin/sys-user'\n\nexport default {\n  components: { VueCropper },\n  props: {\n    // eslint-disable-next-line vue/require-default-prop\n    user: { type: Object }\n  },\n  data() {\n    return {\n      // 是否显示弹出层\n      open: false,\n      // 弹出层标题\n      title: '修改头像',\n      options: {\n        img: store.getters.avatar, // 裁剪图片的地址\n        autoCrop: true, // 是否默认生成截图框\n        autoCropWidth: 200, // 默认生成截图框宽度\n        autoCropHeight: 200, // 默认生成截图框高度\n        fixedBox: true // 固定截图框大小 不允许改变\n      },\n      previews: {}\n    }\n  },\n  methods: {\n    // 编辑头像\n    editCropper() {\n      this.open = true\n    },\n    // 覆盖默认的上传行为\n    requestUpload() {\n    },\n    // 向左旋转\n    rotateLeft() {\n      this.$refs.cropper.rotateLeft()\n    },\n    // 向右旋转\n    rotateRight() {\n      this.$refs.cropper.rotateRight()\n    },\n    // 图片缩放\n    changeScale(num) {\n      num = num || 1\n      this.$refs.cropper.changeScale(num)\n    },\n    // 上传预处理\n    beforeUpload(file) {\n      if (file.type.indexOf('image/') === -1) {\n        this.msgError('文件格式错误，请上传图片类型,如：JPG，PNG后缀的文件。')\n      } else {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onload = () => {\n          this.options.img = reader.result\n        }\n      }\n    },\n    // 上传图片\n    uploadImg() {\n      this.$refs.cropper.getCropBlob(data => {\n        const formData = new FormData()\n        formData.append('upload[]', data)\n        uploadAvatar(formData).then(response => {\n          if (response.code === 200) {\n            this.open = false\n            this.options.img = process.env.VUE_APP_BASE_API + response.data\n            this.msgSuccess(response.msg)\n          } else {\n            this.msgError(response.msg)\n          }\n          this.$refs.cropper.clearCrop()\n        })\n      })\n    },\n    // 实时预览\n    realTime(data) {\n      this.previews = data\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/profile"}]}