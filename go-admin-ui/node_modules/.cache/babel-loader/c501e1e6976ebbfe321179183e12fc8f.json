{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/sys-user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/sys-user/index.vue","mtime":1669257735079},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/babel.config.js","mtime":1669257735055},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <BasicLayout>\n    <template #wrapper>\n      <el-card class=\"box-card\">\n        <el-row :gutter=\"20\">\n          <!--部门数据-->\n          <el-col :span=\"4\" :xs=\"24\">\n            <div class=\"head-container\">\n              <el-input\n                v-model=\"deptName\"\n                placeholder=\"请输入部门名称\"\n                clearable\n                size=\"small\"\n                prefix-icon=\"el-icon-search\"\n                style=\"margin-bottom: 20px\"\n              />\n            </div>\n            <div class=\"head-container\">\n              <el-tree\n                ref=\"tree\"\n                :data=\"deptOptions\"\n                :props=\"defaultProps\"\n                :expand-on-click-node=\"false\"\n                :filter-node-method=\"filterNode\"\n                default-expand-all\n                @node-click=\"handleNodeClick\"\n              />\n            </div>\n          </el-col>\n          <!--用户数据-->\n          <el-col :span=\"20\" :xs=\"24\">\n            <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\" label-width=\"68px\">\n              <el-form-item label=\"用户名称\" prop=\"username\">\n                <el-input\n                  v-model=\"queryParams.username\"\n                  placeholder=\"请输入用户名称\"\n                  clearable\n                  size=\"small\"\n                  style=\"width: 160px\"\n                  @keyup.enter.native=\"handleQuery\"\n                />\n              </el-form-item>\n              <el-form-item label=\"手机号码\" prop=\"phone\">\n                <el-input\n                  v-model=\"queryParams.phone\"\n                  placeholder=\"请输入手机号码\"\n                  clearable\n                  size=\"small\"\n                  style=\"width: 160px\"\n                  @keyup.enter.native=\"handleQuery\"\n                />\n              </el-form-item>\n              <el-form-item label=\"状态\" prop=\"status\">\n                <el-select\n                  v-model=\"queryParams.status\"\n                  placeholder=\"用户状态\"\n                  clearable\n                  size=\"small\"\n                  style=\"width: 160px\"\n                >\n                  <el-option\n                    v-for=\"dict in statusOptions\"\n                    :key=\"dict.value\"\n                    :label=\"dict.label\"\n                    :value=\"dict.value\"\n                  />\n                </el-select>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n                <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n              </el-form-item>\n            </el-form>\n\n            <el-row :gutter=\"10\" class=\"mb8\">\n              <el-col :span=\"1.5\">\n                <el-button\n                  v-permisaction=\"['admin:sysUser:add']\"\n                  type=\"primary\"\n                  icon=\"el-icon-plus\"\n                  size=\"mini\"\n                  @click=\"handleAdd\"\n                >新增</el-button>\n              </el-col>\n              <el-col :span=\"1.5\">\n                <el-button\n                  v-permisaction=\"['admin:sysUser:edit']\"\n                  type=\"success\"\n                  icon=\"el-icon-edit\"\n                  size=\"mini\"\n                  :disabled=\"single\"\n                  @click=\"handleUpdate\"\n                >修改</el-button>\n              </el-col>\n              <el-col :span=\"1.5\">\n                <el-button\n                  v-permisaction=\"['admin:sysUser:remove']\"\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  :disabled=\"multiple\"\n                  @click=\"handleDelete\"\n                >删除</el-button>\n              </el-col>\n            </el-row>\n\n            <el-table\n              v-loading=\"loading\"\n              :data=\"userList\"\n              border\n              @selection-change=\"handleSelectionChange\"\n              @sort-change=\"handleSortChang\"\n            >\n              <el-table-column type=\"selection\" width=\"45\" align=\"center\" />\n              <el-table-column label=\"编号\" width=\"75\" prop=\"userId\" sortable=\"custom\" />\n              <el-table-column label=\"登录名\" width=\"105\" prop=\"username\" sortable=\"custom\" :show-overflow-tooltip=\"true\" />\n              <el-table-column label=\"昵称\" prop=\"nickName\" :show-overflow-tooltip=\"true\" />\n              <el-table-column label=\"部门\" prop=\"dept.deptName\" :show-overflow-tooltip=\"true\" />\n              <el-table-column label=\"手机号\" prop=\"phone\" width=\"108\" />\n              <el-table-column label=\"状态\" width=\"80\" sortable=\"custom\">\n                <template slot-scope=\"scope\">\n                  <el-switch\n                    v-model=\"scope.row.status\"\n                    active-value=\"2\"\n                    inactive-value=\"1\"\n                    @change=\"handleStatusChange(scope.row)\"\n                  />\n                </template>\n              </el-table-column>\n              <el-table-column\n                label=\"创建时间\"\n                prop=\"createdAt\"\n                sortable=\"custom\"\n                width=\"155\"\n              >\n                <template slot-scope=\"scope\">\n                  <span>{{ parseTime(scope.row.createdAt) }}</span>\n                </template>\n              </el-table-column>\n              <el-table-column\n                label=\"操作\"\n                width=\"160\"\n\n                fix=\"right\"\n                class-name=\"small-padding fixed-width\"\n              >\n                <template slot-scope=\"scope\">\n                  <el-button\n                    v-permisaction=\"['admin:sysUser:edit']\"\n                    size=\"mini\"\n                    type=\"text\"\n                    icon=\"el-icon-edit\"\n                    @click=\"handleUpdate(scope.row)\"\n                  >修改</el-button>\n                  <el-button\n                    v-if=\"scope.row.userId !== 1\"\n                    v-permisaction=\"['admin:sysUser:remove']\"\n                    size=\"mini\"\n                    type=\"text\"\n                    icon=\"el-icon-delete\"\n                    @click=\"handleDelete(scope.row)\"\n                  >删除</el-button>\n                  <el-button\n                    v-permisaction=\"['admin:sysUser:resetPassword']\"\n                    size=\"mini\"\n                    type=\"text\"\n                    icon=\"el-icon-key\"\n                    @click=\"handleResetPwd(scope.row)\"\n                  >重置</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n\n            <pagination\n              v-show=\"total>0\"\n              :total=\"total\"\n              :page.sync=\"queryParams.pageIndex\"\n              :limit.sync=\"queryParams.pageSize\"\n              @pagination=\"getList\"\n            />\n          </el-col>\n        </el-row>\n      </el-card>\n      <!-- 添加或修改参数配置对话框 -->\n      <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" :close-on-click-modal=\"false\">\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n          <el-row>\n            <el-col :span=\"12\">\n              <el-form-item label=\"用户昵称\" prop=\"nickName\">\n                <el-input v-model=\"form.nickName\" placeholder=\"请输入用户昵称\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"归属部门\" prop=\"deptId\">\n                <treeselect\n                  v-model=\"form.deptId\"\n                  :options=\"deptOptions\"\n                  placeholder=\"请选择归属部门\"\n                />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"手机号码\" prop=\"phone\">\n                <el-input v-model=\"form.phone\" placeholder=\"请输入手机号码\" maxlength=\"11\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"邮箱\" prop=\"email\">\n                <el-input v-model=\"form.email\" placeholder=\"请输入邮箱\" maxlength=\"50\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"用户名称\" prop=\"username\">\n                <el-input v-model=\"form.username\" placeholder=\"请输入用户名称\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item v-if=\"form.userId == undefined\" label=\"用户密码\" prop=\"password\">\n                <el-input v-model=\"form.password\" placeholder=\"请输入用户密码\" type=\"password\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"用户性别\">\n                <el-select v-model=\"form.sex\" placeholder=\"请选择\">\n                  <el-option\n                    v-for=\"dict in sexOptions\"\n                    :key=\"dict.value\"\n                    :label=\"dict.label\"\n                    :value=\"dict.value\"\n                  />\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"状态\">\n                <el-radio-group v-model=\"form.status\">\n                  <el-radio\n                    v-for=\"dict in statusOptions\"\n                    :key=\"dict.value\"\n                    :label=\"dict.value\"\n                  >{{ dict.label }}</el-radio>\n                </el-radio-group>\n              </el-form-item>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-form-item label=\"岗位\">\n                <el-select v-model=\"form.postId\" placeholder=\"请选择\" @change=\"$forceUpdate()\">\n                  <el-option\n                    v-for=\"item in postOptions\"\n                    :key=\"item.postId\"\n                    :label=\"item.postName\"\n                    :value=\"item.postId\"\n                    :disabled=\"item.status == 1\"\n                  />\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"角色\">\n                <el-select v-model=\"form.roleId\" placeholder=\"请选择\" @change=\"$forceUpdate()\">\n                  <el-option\n                    v-for=\"item in roleOptions\"\n                    :key=\"item.roleId\"\n                    :label=\"item.roleName\"\n                    :value=\"item.roleId\"\n                    :disabled=\"item.status == 1\"\n                  />\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item label=\"备注\">\n                <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n          <el-button @click=\"cancel\">取 消</el-button>\n        </div>\n      </el-dialog>\n      <!-- 用户导入对话框 -->\n      <el-dialog :title=\"upload.title\" :visible.sync=\"upload.open\" width=\"400px\" :close-on-click-modal=\"false\">\n        <el-upload\n          ref=\"upload\"\n          :limit=\"1\"\n          accept=\".xlsx, .xls\"\n          :headers=\"upload.headers\"\n          :action=\"upload.url + '?updateSupport=' + upload.updateSupport\"\n          :disabled=\"upload.isUploading\"\n          :on-progress=\"handleFileUploadProgress\"\n          :on-success=\"handleFileSuccess\"\n          :auto-upload=\"false\"\n          drag\n        >\n          <i class=\"el-icon-upload\" />\n          <div class=\"el-upload__text\">\n            将文件拖到此处，或\n            <em>点击上传</em>\n          </div>\n          <div slot=\"tip\" class=\"el-upload__tip\">\n            <el-checkbox v-model=\"upload.updateSupport\" />是否更新已经存在的用户数据\n            <el-link type=\"info\" style=\"font-size:12px\" @click=\"importTemplate\">下载模板</el-link>\n          </div>\n          <div slot=\"tip\" class=\"el-upload__tip\" style=\"color:red\">提示：仅允许导入“xls”或“xlsx”格式文件！</div>\n        </el-upload>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\n          <el-button @click=\"upload.open = false\">取 消</el-button>\n        </div>\n      </el-dialog>\n    </template>\n  </BasicLayout>\n</template>\n\n<script>\nimport { listUser, getUser, delUser, addUser, updateUser, exportUser, resetUserPwd, changeUserStatus, importTemplate } from '@/api/admin/sys-user'\nimport { getToken } from '@/utils/auth'\n\nimport { listPost } from '@/api/admin/sys-post'\nimport { listRole } from '@/api/admin/sys-role'\nimport { treeselect } from '@/api/admin/sys-dept'\n\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\n\nexport default {\n  name: 'SysUserManage',\n  components: { Treeselect },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 用户表格数据\n      userList: null,\n      // 弹出层标题\n      title: '',\n      // 部门树选项\n      deptOptions: undefined,\n      // 是否显示弹出层\n      open: false,\n      // 部门名称\n      deptName: undefined,\n      // 默认密码\n      initPassword: undefined,\n      // 日期范围\n      dateRange: [],\n      // 状态数据字典\n      statusOptions: [],\n      // 性别状态字典\n      sexOptions: [],\n      // 岗位选项\n      postOptions: [],\n      // 角色选项\n      roleOptions: [],\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 用户导入参数\n      upload: {\n        // 是否显示弹出层（用户导入）\n        open: false,\n        // 弹出层标题（用户导入）\n        title: '',\n        // 是否禁用上传\n        isUploading: false,\n        // 是否更新已经存在的用户数据\n        updateSupport: 0,\n        // 设置上传的请求头部\n        headers: { Authorization: 'Bearer ' + getToken() },\n        // 上传的地址\n        url: process.env.VUE_APP_BASE_API + '/system/user/importData'\n      },\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        username: undefined,\n        phone: undefined,\n        status: undefined,\n        deptId: undefined\n      },\n      // 表单校验\n      rules: {\n        username: [{ required: true, message: '用户名称不能为空', trigger: 'blur' }],\n        nickName: [{ required: true, message: '用户昵称不能为空', trigger: 'blur' }],\n        deptId: [{ required: true, message: '归属部门不能为空', trigger: 'blur' }],\n        password: [{ required: true, message: '用户密码不能为空', trigger: 'blur' }],\n        email: [\n          { required: true, message: '邮箱地址不能为空', trigger: 'blur' },\n          { type: 'email', message: \"'请输入正确的邮箱地址\", trigger: ['blur', 'change'] }\n        ],\n        phone: [\n          { required: true, message: '手机号码不能为空', trigger: 'blur' },\n          { pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/, message: '请输入正确的手机号码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n    // 根据名称筛选部门树\n    deptName(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  created() {\n    this.getList()\n    this.getTreeselect()\n    this.getDicts('sys_normal_disable').then(response => {\n      this.statusOptions = response.data\n    })\n    this.getDicts('sys_user_sex').then(response => {\n      this.sexOptions = response.data\n    })\n    this.getConfigKey('sys_user_initPassword').then(response => {\n      this.initPassword = response.data.configValue\n    })\n  },\n  methods: {\n    /** 查询用户列表 */\n    getList() {\n      this.loading = true\n      listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.userList = response.data.list\n        this.total = response.data.count\n        this.loading = false\n      }\n      )\n    },\n    /** 查询部门下拉树结构 */\n    getTreeselect() {\n      treeselect().then(response => {\n        this.deptOptions = response.data\n      })\n    },\n    // 筛选节点\n    filterNode(value, data) {\n      if (!value) return true\n      return data.label.indexOf(value) !== -1\n    },\n    // 节点单击事件\n    handleNodeClick(data) {\n      this.queryParams.deptId = '/' + data.id + '/'\n      this.getList()\n    },\n    /** 转换菜单数据结构 */\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children\n      }\n      return {\n        id: node.id,\n        label: node.label,\n        children: node.children\n      }\n    },\n    /** 排序回调函数 */\n    handleSortChang(column, prop, order) {\n      prop = column.prop\n      order = column.order\n      if (this.order !== '' && this.order !== prop + 'Order') {\n        this.queryParams[this.order] = undefined\n      }\n      if (order === 'descending') {\n        this.queryParams[prop + 'Order'] = 'desc'\n        this.order = prop + 'Order'\n      } else if (order === 'ascending') {\n        this.queryParams[prop + 'Order'] = 'asc'\n        this.order = prop + 'Order'\n      } else {\n        this.queryParams[prop + 'Order'] = undefined\n      }\n      this.getList()\n    },\n    // 用户状态修改\n    handleStatusChange(row) {\n      const text = row.status === '2' ? '启用' : '停用'\n      this.$confirm('确认要\"' + text + '\"\"' + row.username + '\"用户吗?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return changeUserStatus(row)\n      }).then(() => {\n        this.msgSuccess(text + '成功')\n      }).catch(function() {\n        row.status = row.status === '2' ? '1' : '2'\n      })\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        userId: undefined,\n        deptId: undefined,\n        username: undefined,\n        nickName: undefined,\n        password: undefined,\n        phone: undefined,\n        email: undefined,\n        sex: undefined,\n        status: '2',\n        remark: undefined,\n        postIds: undefined,\n        roleIds: undefined\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.page = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.resetForm('queryForm')\n      this.queryParams.deptId = ''\n      this.handleQuery()\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.userId)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.getTreeselect()\n\n      listPost({ pageSize: 1000 }).then(response => {\n        this.postOptions = response.data.list\n      })\n      listRole({ pageSize: 1000 }).then(response => {\n        this.roleOptions = response.data.list\n      })\n      this.open = true\n      this.title = '添加用户'\n      this.form.password = this.initPassword\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n\n      const userId = row.userId || this.ids\n      getUser(userId).then(response => {\n        this.form = response.data\n        this.open = true\n        this.title = '修改用户'\n        this.form.password = ''\n      })\n      listPost({ pageSize: 1000 }).then(response => {\n        this.postOptions = response.data.list\n      })\n      listRole({ pageSize: 1000 }).then(response => {\n        this.roleOptions = response.data.list\n      })\n    },\n    /** 重置密码按钮操作 */\n    handleResetPwd(row) {\n      this.$prompt('请输入\"' + row.username + '\"的新密码', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(({ value }) => {\n        resetUserPwd(row.userId, value).then(response => {\n          if (response.code === 200) {\n            this.msgSuccess(response.msg)\n          } else {\n            this.msgError(response.msg)\n          }\n        })\n      }).catch(() => {})\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.userId !== undefined) {\n            updateUser(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addUser(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const Ids = (row.userId && [row.userId]) || this.ids\n      this.$confirm('是否确认删除用户编号为\"' + Ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delUser({ 'ids': Ids })\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams\n      this.$confirm('是否确认导出所有用户数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return exportUser(queryParams)\n      }).then(response => {\n        this.download(response.msg)\n      }).catch(function() {})\n    },\n    /** 导入按钮操作 */\n    handleImport() {\n      this.upload.title = '用户导入'\n      this.upload.open = true\n    },\n    /** 下载模板操作 */\n    importTemplate() {\n      importTemplate().then(response => {\n        this.download(response.msg)\n      })\n    },\n    // 文件上传中处理\n    handleFileUploadProgress(event, file, fileList) {\n      this.upload.isUploading = true\n    },\n    // 文件上传成功处理\n    handleFileSuccess(response, file, fileList) {\n      this.upload.open = false\n      this.upload.isUploading = false\n      this.$refs.upload.clearFiles()\n      this.$alert(response.msg, '导入结果', { dangerouslyUseHTMLString: true })\n      this.getList()\n    },\n    // 提交上传文件\n    submitFileForm() {\n      this.$refs.upload.submit()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/admin/sys-user"}]}