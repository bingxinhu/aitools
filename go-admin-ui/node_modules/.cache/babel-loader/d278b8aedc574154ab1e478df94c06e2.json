{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/dev-tools/gen/editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/dev-tools/gen/editTable.vue","mtime":1669257735083},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/babel.config.js","mtime":1669257735055},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zaGlmdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEdlblRhYmxlLCB1cGRhdGVHZW5UYWJsZSwgZ2V0VGFibGVUcmVlIH0gZnJvbSAnQC9hcGkvdG9vbHMvZ2VuJzsKLy8gaW1wb3J0IHsgbGlzdFRhYmxlIH0gZnJvbSAnQC9hcGkvdG9vbHMvZ2VuJwppbXBvcnQgeyBvcHRpb25zZWxlY3QgYXMgZ2V0RGljdE9wdGlvbnNlbGVjdCB9IGZyb20gJ0AvYXBpL2FkbWluL2RpY3QvdHlwZSc7CmltcG9ydCBiYXNpY0luZm9Gb3JtIGZyb20gJy4vYmFzaWNJbmZvRm9ybSc7CmltcG9ydCBnZW5JbmZvRm9ybSBmcm9tICcuL2dlbkluZm9Gb3JtJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHZW5FZGl0JywKICBjb21wb25lbnRzOiB7CiAgICBiYXNpY0luZm9Gb3JtOiBiYXNpY0luZm9Gb3JtLAogICAgZ2VuSW5mb0Zvcm06IGdlbkluZm9Gb3JtCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6YCJ5Lit6YCJ6aG55Y2h55qEIG5hbWUKICAgICAgYWN0aXZlTmFtZTogJ2Nsb3VtJywKICAgICAgLy8g6KGo5qC855qE6auY5bqmCiAgICAgIHRhYmxlSGVpZ2h0OiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0IC0gMjQ1ICsgJ3B4JywKICAgICAgLy8g6KGo5YiX5L+h5oGvCiAgICAgIGNvbHVtbnM6IFtdLAogICAgICB0YWJsZVRyZWU6IFtdLAogICAgICAvLyDlrZflhbjkv6Hmga8KICAgICAgZGljdE9wdGlvbnM6IFtdLAogICAgICAvLyDooajor6bnu4bkv6Hmga8KICAgICAgaW5mbzoge30KICAgIH07CiAgfSwKICBiZWZvcmVDcmVhdGU6IGZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICBnZXRUYWJsZVRyZWUoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBfdGhpcy50YWJsZVRyZWUgPSByZXNwb25zZS5kYXRhOwogICAgICBfdGhpcy50YWJsZVRyZWUudW5zaGlmdCh7CiAgICAgICAgdGFibGVJZDogMCwKICAgICAgICBjbGFzc05hbWU6ICfor7fpgInmi6knCiAgICAgIH0pOwogICAgfSk7CiAgICB2YXIgdGFibGVJZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnRhYmxlSWQ7CiAgICBpZiAodGFibGVJZCkgewogICAgICAvLyDojrflj5booajor6bnu4bkv6Hmga8KICAgICAgZ2V0R2VuVGFibGUodGFibGVJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuY29sdW1ucyA9IHJlcy5kYXRhLmxpc3Q7CiAgICAgICAgX3RoaXMuaW5mbyA9IHJlcy5kYXRhLmluZm87CiAgICAgICAgX3RoaXMuaW5mby5pc0RhdGFTY29wZSA9IF90aGlzLmluZm8uaXNEYXRhU2NvcGUudG9TdHJpbmcoKTsKICAgICAgICBfdGhpcy5pbmZvLmlzQWN0aW9ucyA9IF90aGlzLmluZm8uaXNBY3Rpb25zLnRvU3RyaW5nKCk7CiAgICAgICAgX3RoaXMuaW5mby5pc0F1dGggPSBfdGhpcy5pbmZvLmlzQXV0aC50b1N0cmluZygpOwogICAgICAgIF90aGlzLmNvbHVtbnMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgX3RoaXMudGFibGVUcmVlLmZpbHRlcihmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBpZiAoZS50YWJsZUlkID09PSBpdGVtLmZrVGFibGVOYW1lQ2xhc3MpIHsKICAgICAgICAgICAgICBpdGVtLmZrQ29sID0gZS5jb2x1bW5zIHx8IFt7CiAgICAgICAgICAgICAgICBjb2x1bW5JZDogMCwKICAgICAgICAgICAgICAgIGNvbHVtbk5hbWU6ICfor7fpgInmi6knCiAgICAgICAgICAgICAgfV07CiAgICAgICAgICAgICAgLy8gaXRlbS5ma0NvbC51bnNoaWZ0KHsgY29sdW1uSWQ6IDAsIGNvbHVtbk5hbWU6ICfor7fpgInmi6knIH0pCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKCiAgICAgIC8qKiDmn6Xor6LlrZflhbjkuIvmi4nliJfooaggKi8KICAgICAgZ2V0RGljdE9wdGlvbnNlbGVjdCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuZGljdE9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbmRlckhlYWRlVXBkYXRlOiBmdW5jdGlvbiByZW5kZXJIZWFkZVVwZGF0ZShoLCBfcmVmKSB7CiAgICAgIHZhciBjb2x1bW4gPSBfcmVmLmNvbHVtbiwKICAgICAgICAkaW5kZXggPSBfcmVmLiRpbmRleDsKICAgICAgLy8gaCDmmK/kuIDkuKrmuLLmn5Plh73mlbAgICAgICAgY29sdW1uIOaYr+S4gOS4quWvueixoeihqOekuuW9k+WJjeWIlyAgICAgICRpbmRleCDnrKzlh6DliJcKICAgICAgcmV0dXJuIGgoJ2RpdicsIFtoKCdzcGFuJywgY29sdW1uLmxhYmVsICsgJyAgJywgewogICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICBtYXJnaW5Ub3A6ICcwcHgnCiAgICAgIH0pLCBoKCdlbC1wb3BvdmVyJywgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICBwbGFjZW1lbnQ6ICd0b3Atc3RhcnQnLAogICAgICAgICAgd2lkdGg6ICcyNzAnLAogICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJwogICAgICAgIH0KICAgICAgfSwgW2goJ3AnLCAn5piv5ZCm5Zyo6KGo5Y2V57yW6L6R5pe26IO95aSf57yW6L6R77yM5omT4oia6KGo56S66ZyA6KaBJywgewogICAgICAgIGNsYXNzOiAndGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDAnCiAgICAgIH0pLAogICAgICAvLyDnlJ/miJAgaSDmoIfnrb4g77yM5re75YqgaWNvbiDorr7nva4g5qC35byP77yMc2xvdCDlv4XloasKICAgICAgaCgnaScsIHsKICAgICAgICBjbGFzczogJ2VsLWljb24tcXVlc3Rpb24nLAogICAgICAgIHN0eWxlOiAnY29sb3I6I2NjYyxwYWRkaW5nLXRvcDo1cHgnLAogICAgICAgIHNsb3Q6ICdyZWZlcmVuY2UnCiAgICAgIH0pXSldKTsKICAgIH0sCiAgICByZW5kZXJIZWFkZUxpc3Q6IGZ1bmN0aW9uIHJlbmRlckhlYWRlTGlzdChoLCBfcmVmMikgewogICAgICB2YXIgY29sdW1uID0gX3JlZjIuY29sdW1uLAogICAgICAgICRpbmRleCA9IF9yZWYyLiRpbmRleDsKICAgICAgLy8gaCDmmK/kuIDkuKrmuLLmn5Plh73mlbAgICAgICAgY29sdW1uIOaYr+S4gOS4quWvueixoeihqOekuuW9k+WJjeWIlyAgICAgICRpbmRleCDnrKzlh6DliJcKICAgICAgcmV0dXJuIGgoJ2RpdicsIFtoKCdzcGFuJywgY29sdW1uLmxhYmVsICsgJyAgJywgewogICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICBtYXJnaW5Ub3A6ICcwcHgnCiAgICAgIH0pLCBoKCdlbC1wb3BvdmVyJywgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICBwbGFjZW1lbnQ6ICd0b3Atc3RhcnQnLAogICAgICAgICAgd2lkdGg6ICcyNjAnLAogICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJwogICAgICAgIH0KICAgICAgfSwgW2goJ3AnLCAn5piv5ZCm5Zyo5YiX6KGo5Lit5bGV56S677yM5omT4oia6KGo56S66ZyA6KaB5bGV56S6JywgewogICAgICAgIGNsYXNzOiAndGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDAnCiAgICAgIH0pLCBoKCdpJywgewogICAgICAgIGNsYXNzOiAnZWwtaWNvbi1xdWVzdGlvbicsCiAgICAgICAgc3R5bGU6ICdjb2xvcjojY2NjLHBhZGRpbmctdG9wOjVweCcsCiAgICAgICAgc2xvdDogJ3JlZmVyZW5jZScKICAgICAgfSldKV0pOwogICAgfSwKICAgIHJlbmRlckhlYWRlU2VhcmNoOiBmdW5jdGlvbiByZW5kZXJIZWFkZVNlYXJjaChoLCBfcmVmMykgewogICAgICB2YXIgY29sdW1uID0gX3JlZjMuY29sdW1uLAogICAgICAgICRpbmRleCA9IF9yZWYzLiRpbmRleDsKICAgICAgcmV0dXJuIGgoJ2RpdicsIFtoKCdzcGFuJywgY29sdW1uLmxhYmVsICsgJyAgJywgewogICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICBtYXJnaW5Ub3A6ICcwcHgnCiAgICAgIH0pLCBoKCdlbC1wb3BvdmVyJywgewogICAgICAgIHByb3BzOiB7CiAgICAgICAgICBwbGFjZW1lbnQ6ICd0b3Atc3RhcnQnLAogICAgICAgICAgd2lkdGg6ICcyNzAnLAogICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJwogICAgICAgIH0KICAgICAgfSwgW2goJ3AnLCAn5piv6YO95b2T5YGa5pCc57Si5p2h5Lu277yM5omT4oia6KGo56S65YGa5Li65pCc57Si5p2h5Lu2JywgewogICAgICAgIGNsYXNzOiAndGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDAnCiAgICAgIH0pLCBoKCdpJywgewogICAgICAgIGNsYXNzOiAnZWwtaWNvbi1xdWVzdGlvbicsCiAgICAgICAgc3R5bGU6ICdjb2xvcjojY2NjLHBhZGRpbmctdG9wOjVweCcsCiAgICAgICAgc2xvdDogJ3JlZmVyZW5jZScKICAgICAgfSldKV0pOwogICAgfSwKICAgIGhhbmRsZUNoYW5nZUNvbmZpZzogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlQ29uZmlnKHJvdywgaW5kZXgpIHsKICAgICAgdGhpcy50YWJsZVRyZWUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaWYgKGl0ZW0udGFibGVOYW1lID09PSByb3cuZmtUYWJsZU5hbWUpIHsKICAgICAgICAgIHJvdy5ma0NvbCA9IGl0ZW0uY29sdW1uczsKICAgICAgICAgIC8vIHJvdy5ma0NvbC51bnNoaWZ0KHsgY29sdW1uSWQ6IDAsIGNvbHVtbk5hbWU6ICfor7fpgInmi6knIH0pCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvKiog5o+Q5Lqk5oyJ6ZKuICovc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHZhciBiYXNpY0Zvcm0gPSB0aGlzLiRyZWZzLmJhc2ljSW5mby4kcmVmcy5iYXNpY0luZm9Gb3JtOwogICAgICB2YXIgZ2VuRm9ybSA9IHRoaXMuJHJlZnMuZ2VuSW5mby4kcmVmcy5nZW5JbmZvRm9ybTsKICAgICAgUHJvbWlzZS5hbGwoW2Jhc2ljRm9ybSwgZ2VuRm9ybV0ubWFwKHRoaXMuZ2V0Rm9ybVByb21pc2UpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgdmFsaWRhdGVSZXN1bHQgPSByZXMuZXZlcnkoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiAhIWl0ZW07CiAgICAgICAgfSk7CiAgICAgICAgaWYgKHZhbGlkYXRlUmVzdWx0KSB7CiAgICAgICAgICB2YXIgZ2VuVGFibGUgPSBPYmplY3QuYXNzaWduKHt9LCBiYXNpY0Zvcm0ubW9kZWwsIGdlbkZvcm0ubW9kZWwpOwogICAgICAgICAgZ2VuVGFibGUuY29sdW1ucyA9IF90aGlzMi5jb2x1bW5zOwogICAgICAgICAgZ2VuVGFibGUucGFyYW1zID0gewogICAgICAgICAgICB0cmVlQ29kZTogZ2VuVGFibGUudHJlZUNvZGUsCiAgICAgICAgICAgIHRyZWVOYW1lOiBnZW5UYWJsZS50cmVlTmFtZSwKICAgICAgICAgICAgdHJlZVBhcmVudENvZGU6IGdlblRhYmxlLnRyZWVQYXJlbnRDb2RlCiAgICAgICAgICB9OwogICAgICAgICAgZ2VuVGFibGUuaXNEYXRhU2NvcGUgPSBKU09OLnBhcnNlKGdlblRhYmxlLmlzRGF0YVNjb3BlKTsKICAgICAgICAgIGdlblRhYmxlLmlzQWN0aW9ucyA9IEpTT04ucGFyc2UoZ2VuVGFibGUuaXNBY3Rpb25zKTsKICAgICAgICAgIGdlblRhYmxlLmlzQXV0aCA9IEpTT04ucGFyc2UoZ2VuVGFibGUuaXNBdXRoKTsKICAgICAgICAgIHVwZGF0ZUdlblRhYmxlKGdlblRhYmxlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgX3RoaXMyLm1zZ1N1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgX3RoaXMyLmNsb3NlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIubXNnRXJyb3IoJ+ihqOWNleagoemqjOacqumAmui/h++8jOivt+mHjeaWsOajgOafpeaPkOS6pOWGheWuuScpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0VGFibGVzOiBmdW5jdGlvbiBnZXRUYWJsZXMoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICBnZXRUYWJsZVRyZWUoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMy50YWJsZVRyZWUgPSByZXNwb25zZS5kYXRhOwogICAgICAgIF90aGlzMy50YWJsZVRyZWUudW5zaGlmdCh7CiAgICAgICAgICB0YWJsZUlkOiAwLAogICAgICAgICAgY2xhc3NOYW1lOiAn6K+36YCJ5oupJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRUYWJsZXNDb2w6IGZ1bmN0aW9uIGdldFRhYmxlc0NvbCh0YWJsZU5hbWUpIHsKICAgICAgcmV0dXJuIHRoaXMudGFibGVUcmVlLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmIChpdGVtLnRhYmxlTmFtZSA9PT0gdGFibGVOYW1lKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS5jb2x1bW5zOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0Rm9ybVByb21pc2U6IGZ1bmN0aW9uIGdldEZvcm1Qcm9taXNlKGZvcm0pIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgZm9ybS52YWxpZGF0ZShmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXNvbHZlKHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8qKiDlhbPpl63mjInpkq4gKi9jbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd0YWdzVmlldy9kZWxWaWV3JywgdGhpcy4kcm91dGUpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy9kZXYtdG9vbHMvZ2VuJywKICAgICAgICBxdWVyeTogewogICAgICAgICAgdDogRGF0ZS5ub3coKQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["editTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-card>\n    <el-tabs v-model=\"activeName\">\n      <el-tab-pane label=\"基本信息\" name=\"basic\">\n        <basic-info-form ref=\"basicInfo\" :info=\"info\" />\n      </el-tab-pane>\n      <el-tab-pane label=\"字段信息\" name=\"cloum\">\n        <el-alert\n          title=\"⚠️表字段中的id、create_by、update_by、created_at、updated_at、deleted_at的字段在此列表中已经隐藏\"\n          type=\"warning\"\n          show-icon\n        />\n        <el-table :data=\"columns\" :max-height=\"tableHeight\" style=\"width: 100%\">\n          <el-table-column fixed label=\"序号\" type=\"index\" width=\"50\" />\n          <el-table-column\n            fixed\n            label=\"字段列名\"\n            prop=\"columnName\"\n            width=\"150\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column fixed label=\"字段描述\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.columnComment\" />\n            </template>\n          </el-table-column>\n          <el-table-column\n            label=\"物理类型\"\n            prop=\"columnType\"\n            width=\"120\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column label=\"go类型\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.goType\">\n                <el-option label=\"int64\" value=\"int64\" />\n                <el-option label=\"string\" value=\"string\" />\n                <!-- <el-option label=\"int\" value=\"int\" />\n                <el-option label=\"bool\" value=\"bool\" /> -->\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"go属性\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.goField\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"json属性\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.jsonField\" />\n            </template>\n          </el-table-column>\n\n          <el-table-column label=\"编辑\" width=\"50\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isInsert\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column>\n          <!-- <el-table-column label=\"编辑\" width=\"70\" :render-header=\"renderHeadeUpdate\" :cell-style=\"{'text-align':'center'}\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isEdit\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column> -->\n          <el-table-column label=\"列表\" width=\"70\" :render-header=\"renderHeadeList\" :cell-style=\"{'text-align':'center'}\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isList\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"查询\" width=\"70\" :render-header=\"renderHeadeSearch\" :cell-style=\"{'text-align':'center'}\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isQuery\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"查询方式\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.queryType\">\n                <el-option label=\"=\" value=\"EQ\" />\n                <el-option label=\"!=\" value=\"NE\" />\n                <el-option label=\">\" value=\"GT\" />\n                <el-option label=\">=\" value=\"GTE\" />\n                <el-option label=\"<\" value=\"LT\" />\n                <el-option label=\"<=\" value=\"LTE\" />\n                <el-option label=\"LIKE\" value=\"LIKE\" />\n                <!-- <el-option label=\"BETWEEN\" value=\"BETWEEN\" /> -->\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"必填\" width=\"50\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isRequired\" true-label=\"1\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"显示类型\" width=\"140\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.htmlType\">\n                <el-option label=\"文本框\" value=\"input\" />\n                <el-option label=\"下拉框\" value=\"select\" />\n                <el-option label=\"单选框\" value=\"radio\" />\n                <!-- <el-option label=\"文件选择\" value=\"file\" /> -->\n                <!-- <el-option label=\"复选框\" value=\"checkbox\" />\n                <el-option label=\"日期控件\" value=\"datetime\" />-->\n                <el-option label=\"文本域\" value=\"textarea\" />\n\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"字典类型\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.dictType\" clearable filterable placeholder=\"请选择\">\n                <el-option\n                  v-for=\"dict in dictOptions\"\n                  :key=\"dict.dictType\"\n                  :label=\"dict.dictName\"\n                  :value=\"dict.dictType\"\n                >\n                  <span style=\"float: left\">{{ dict.dictName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ dict.dictType }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"关系表\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.fkTableName\" clearable filterable placeholder=\"请选择\" @change=\"handleChangeConfig(scope.row,scope.$index)\">\n                <el-option\n                  v-for=\"table in tableTree\"\n                  :key=\"table.tableName\"\n                  :label=\"table.tableName\"\n                  :value=\"table.tableName\"\n                >\n                  <span style=\"float: left\">{{ table.tableName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ table.tableComment }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"关系表key\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.fkLabelId\" clearable filterable placeholder=\"请选择\">\n                <el-option\n                  v-for=\"column in scope.row.fkCol\"\n                  :key=\"column.columnName\"\n                  :label=\"column.columnName\"\n                  :value=\"column.jsonField\"\n                >\n                  <span style=\"float: left\">{{ column.jsonField }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ column.columnComment }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"关系表value\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.fkLabelName\" clearable filterable placeholder=\"请选择\">\n                <el-option\n                  v-for=\"column in scope.row.fkCol\"\n                  :key=\"column.columnName\"\n                  :label=\"column.columnName\"\n                  :value=\"column.jsonField\"\n                >\n                  <span style=\"float: left\">{{ column.jsonField }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ column.columnComment }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"生成信息\" name=\"genInfo\">\n        <gen-info-form ref=\"genInfo\" :info=\"info\" />\n      </el-tab-pane>\n    </el-tabs>\n    <el-form label-width=\"100px\">\n      <el-form-item style=\"text-align: center;margin-left:-100px;margin-top:10px;\">\n        <el-button type=\"primary\" @click=\"submitForm()\">提交</el-button>\n        <el-button @click=\"close()\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n<script>\nimport { getGenTable, updateGenTable, getTableTree } from '@/api/tools/gen'\n// import { listTable } from '@/api/tools/gen'\nimport { optionselect as getDictOptionselect } from '@/api/admin/dict/type'\nimport basicInfoForm from './basicInfoForm'\nimport genInfoForm from './genInfoForm'\nexport default {\n  name: 'GenEdit',\n  components: {\n    basicInfoForm,\n    genInfoForm\n  },\n  data() {\n    return {\n      // 选中选项卡的 name\n      activeName: 'cloum',\n      // 表格的高度\n      tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n      // 表列信息\n      columns: [],\n      tableTree: [],\n      // 字典信息\n      dictOptions: [],\n      // 表详细信息\n      info: {}\n    }\n  },\n\n  beforeCreate() {\n    getTableTree().then(response => {\n      this.tableTree = response.data\n      this.tableTree.unshift({ tableId: 0, className: '请选择' })\n    })\n    const { tableId } = this.$route.query\n    if (tableId) {\n      // 获取表详细信息\n      getGenTable(tableId).then(res => {\n        this.columns = res.data.list\n        this.info = res.data.info\n\n        this.info.isDataScope = this.info.isDataScope.toString()\n        this.info.isActions = this.info.isActions.toString()\n        this.info.isAuth = this.info.isAuth.toString()\n\n        this.columns.forEach(item => {\n          this.tableTree.filter(function(e) {\n            if (e.tableId === item.fkTableNameClass) {\n              item.fkCol = e.columns || [{ columnId: 0, columnName: '请选择' }]\n              // item.fkCol.unshift({ columnId: 0, columnName: '请选择' })\n            }\n          })\n        })\n      })\n\n      /** 查询字典下拉列表 */\n      getDictOptionselect().then(response => {\n        this.dictOptions = response.data\n      })\n    }\n  },\n  methods: {\n    renderHeadeUpdate(h, { column, $index }) {\n      // h 是一个渲染函数       column 是一个对象表示当前列      $index 第几列\n      return h('div', [\n        h('span', column.label + '  ', { align: 'center', marginTop: '0px' }),\n        h(\n          'el-popover',\n          { props: { placement: 'top-start', width: '270', trigger: 'hover' }},\n          [\n            h('p', '是否在表单编辑时能够编辑，打√表示需要', { class: 'text-align: center; margin: 0' }),\n            // 生成 i 标签 ，添加icon 设置 样式，slot 必填\n            h('i', { class: 'el-icon-question', style: 'color:#ccc,padding-top:5px', slot: 'reference' })\n          ]\n        )\n      ])\n    },\n    renderHeadeList(h, { column, $index }) {\n      // h 是一个渲染函数       column 是一个对象表示当前列      $index 第几列\n      return h('div', [\n        h('span', column.label + '  ', { align: 'center', marginTop: '0px' }),\n        h(\n          'el-popover',\n          { props: { placement: 'top-start', width: '260', trigger: 'hover' }},\n          [\n            h('p', '是否在列表中展示，打√表示需要展示', { class: 'text-align: center; margin: 0' }),\n            h('i', { class: 'el-icon-question', style: 'color:#ccc,padding-top:5px', slot: 'reference' })\n          ]\n        )\n      ])\n    },\n    renderHeadeSearch(h, { column, $index }) {\n      return h('div', [\n        h('span', column.label + '  ', { align: 'center', marginTop: '0px' }),\n        h(\n          'el-popover',\n          { props: { placement: 'top-start', width: '270', trigger: 'hover' }},\n          [\n            h('p', '是都当做搜索条件，打√表示做为搜索条件', { class: 'text-align: center; margin: 0' }),\n            h('i', { class: 'el-icon-question', style: 'color:#ccc,padding-top:5px', slot: 'reference' })\n          ]\n        )\n      ])\n    },\n    handleChangeConfig(row, index) {\n      this.tableTree.filter(function(item) {\n        if (item.tableName === row.fkTableName) {\n          row.fkCol = item.columns\n          // row.fkCol.unshift({ columnId: 0, columnName: '请选择' })\n        }\n      })\n    },\n    /** 提交按钮 */\n    submitForm() {\n      const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n      const genForm = this.$refs.genInfo.$refs.genInfoForm\n\n      Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n        const validateResult = res.every(item => !!item)\n        if (validateResult) {\n          const genTable = Object.assign({}, basicForm.model, genForm.model)\n          genTable.columns = this.columns\n          genTable.params = {\n            treeCode: genTable.treeCode,\n            treeName: genTable.treeName,\n            treeParentCode: genTable.treeParentCode\n          }\n          genTable.isDataScope = JSON.parse(genTable.isDataScope)\n          genTable.isActions = JSON.parse(genTable.isActions)\n          genTable.isAuth = JSON.parse(genTable.isAuth)\n          updateGenTable(genTable).then(res => {\n            this.msgSuccess(res.msg)\n            if (res.code === 200) {\n              this.close()\n            }\n          })\n        } else {\n          this.msgError('表单校验未通过，请重新检查提交内容')\n        }\n      })\n    },\n    getTables() {\n      getTableTree().then(response => {\n        this.tableTree = response.data\n        this.tableTree.unshift({ tableId: 0, className: '请选择' })\n      })\n    },\n    getTablesCol(tableName) {\n      return this.tableTree.filter(function(item) {\n        if (item.tableName === tableName) {\n          return item.columns\n        }\n      })\n    },\n    getFormPromise(form) {\n      return new Promise(resolve => {\n        form.validate(res => {\n          resolve(res)\n        })\n      })\n    },\n    /** 关闭按钮 */\n    close() {\n      this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/dev-tools/gen', query: { t: Date.now() }})\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/dev-tools/gen"}]}