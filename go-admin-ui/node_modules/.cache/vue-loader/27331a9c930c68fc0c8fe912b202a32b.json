{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/dev-tools/gen/editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/dev-tools/gen/editTable.vue","mtime":1669257735083},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["editTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"editTable.vue","sourceRoot":"src/views/dev-tools/gen","sourcesContent":["<template>\n  <el-card>\n    <el-tabs v-model=\"activeName\">\n      <el-tab-pane label=\"基本信息\" name=\"basic\">\n        <basic-info-form ref=\"basicInfo\" :info=\"info\" />\n      </el-tab-pane>\n      <el-tab-pane label=\"字段信息\" name=\"cloum\">\n        <el-alert\n          title=\"⚠️表字段中的id、create_by、update_by、created_at、updated_at、deleted_at的字段在此列表中已经隐藏\"\n          type=\"warning\"\n          show-icon\n        />\n        <el-table :data=\"columns\" :max-height=\"tableHeight\" style=\"width: 100%\">\n          <el-table-column fixed label=\"序号\" type=\"index\" width=\"50\" />\n          <el-table-column\n            fixed\n            label=\"字段列名\"\n            prop=\"columnName\"\n            width=\"150\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column fixed label=\"字段描述\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.columnComment\" />\n            </template>\n          </el-table-column>\n          <el-table-column\n            label=\"物理类型\"\n            prop=\"columnType\"\n            width=\"120\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column label=\"go类型\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.goType\">\n                <el-option label=\"int64\" value=\"int64\" />\n                <el-option label=\"string\" value=\"string\" />\n                <!-- <el-option label=\"int\" value=\"int\" />\n                <el-option label=\"bool\" value=\"bool\" /> -->\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"go属性\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.goField\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"json属性\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.jsonField\" />\n            </template>\n          </el-table-column>\n\n          <el-table-column label=\"编辑\" width=\"50\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isInsert\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column>\n          <!-- <el-table-column label=\"编辑\" width=\"70\" :render-header=\"renderHeadeUpdate\" :cell-style=\"{'text-align':'center'}\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isEdit\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column> -->\n          <el-table-column label=\"列表\" width=\"70\" :render-header=\"renderHeadeList\" :cell-style=\"{'text-align':'center'}\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isList\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"查询\" width=\"70\" :render-header=\"renderHeadeSearch\" :cell-style=\"{'text-align':'center'}\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isQuery\" true-label=\"1\" false-label=\"0\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"查询方式\" width=\"120\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.queryType\">\n                <el-option label=\"=\" value=\"EQ\" />\n                <el-option label=\"!=\" value=\"NE\" />\n                <el-option label=\">\" value=\"GT\" />\n                <el-option label=\">=\" value=\"GTE\" />\n                <el-option label=\"<\" value=\"LT\" />\n                <el-option label=\"<=\" value=\"LTE\" />\n                <el-option label=\"LIKE\" value=\"LIKE\" />\n                <!-- <el-option label=\"BETWEEN\" value=\"BETWEEN\" /> -->\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"必填\" width=\"50\">\n            <template slot-scope=\"scope\">\n              <el-checkbox v-model=\"scope.row.isRequired\" true-label=\"1\" />\n            </template>\n          </el-table-column>\n          <el-table-column label=\"显示类型\" width=\"140\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.htmlType\">\n                <el-option label=\"文本框\" value=\"input\" />\n                <el-option label=\"下拉框\" value=\"select\" />\n                <el-option label=\"单选框\" value=\"radio\" />\n                <!-- <el-option label=\"文件选择\" value=\"file\" /> -->\n                <!-- <el-option label=\"复选框\" value=\"checkbox\" />\n                <el-option label=\"日期控件\" value=\"datetime\" />-->\n                <el-option label=\"文本域\" value=\"textarea\" />\n\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"字典类型\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.dictType\" clearable filterable placeholder=\"请选择\">\n                <el-option\n                  v-for=\"dict in dictOptions\"\n                  :key=\"dict.dictType\"\n                  :label=\"dict.dictName\"\n                  :value=\"dict.dictType\"\n                >\n                  <span style=\"float: left\">{{ dict.dictName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ dict.dictType }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"关系表\" width=\"160\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.fkTableName\" clearable filterable placeholder=\"请选择\" @change=\"handleChangeConfig(scope.row,scope.$index)\">\n                <el-option\n                  v-for=\"table in tableTree\"\n                  :key=\"table.tableName\"\n                  :label=\"table.tableName\"\n                  :value=\"table.tableName\"\n                >\n                  <span style=\"float: left\">{{ table.tableName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ table.tableComment }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"关系表key\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.fkLabelId\" clearable filterable placeholder=\"请选择\">\n                <el-option\n                  v-for=\"column in scope.row.fkCol\"\n                  :key=\"column.columnName\"\n                  :label=\"column.columnName\"\n                  :value=\"column.jsonField\"\n                >\n                  <span style=\"float: left\">{{ column.jsonField }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ column.columnComment }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"关系表value\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.fkLabelName\" clearable filterable placeholder=\"请选择\">\n                <el-option\n                  v-for=\"column in scope.row.fkCol\"\n                  :key=\"column.columnName\"\n                  :label=\"column.columnName\"\n                  :value=\"column.jsonField\"\n                >\n                  <span style=\"float: left\">{{ column.jsonField }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ column.columnComment }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"生成信息\" name=\"genInfo\">\n        <gen-info-form ref=\"genInfo\" :info=\"info\" />\n      </el-tab-pane>\n    </el-tabs>\n    <el-form label-width=\"100px\">\n      <el-form-item style=\"text-align: center;margin-left:-100px;margin-top:10px;\">\n        <el-button type=\"primary\" @click=\"submitForm()\">提交</el-button>\n        <el-button @click=\"close()\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n<script>\nimport { getGenTable, updateGenTable, getTableTree } from '@/api/tools/gen'\n// import { listTable } from '@/api/tools/gen'\nimport { optionselect as getDictOptionselect } from '@/api/admin/dict/type'\nimport basicInfoForm from './basicInfoForm'\nimport genInfoForm from './genInfoForm'\nexport default {\n  name: 'GenEdit',\n  components: {\n    basicInfoForm,\n    genInfoForm\n  },\n  data() {\n    return {\n      // 选中选项卡的 name\n      activeName: 'cloum',\n      // 表格的高度\n      tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n      // 表列信息\n      columns: [],\n      tableTree: [],\n      // 字典信息\n      dictOptions: [],\n      // 表详细信息\n      info: {}\n    }\n  },\n\n  beforeCreate() {\n    getTableTree().then(response => {\n      this.tableTree = response.data\n      this.tableTree.unshift({ tableId: 0, className: '请选择' })\n    })\n    const { tableId } = this.$route.query\n    if (tableId) {\n      // 获取表详细信息\n      getGenTable(tableId).then(res => {\n        this.columns = res.data.list\n        this.info = res.data.info\n\n        this.info.isDataScope = this.info.isDataScope.toString()\n        this.info.isActions = this.info.isActions.toString()\n        this.info.isAuth = this.info.isAuth.toString()\n\n        this.columns.forEach(item => {\n          this.tableTree.filter(function(e) {\n            if (e.tableId === item.fkTableNameClass) {\n              item.fkCol = e.columns || [{ columnId: 0, columnName: '请选择' }]\n              // item.fkCol.unshift({ columnId: 0, columnName: '请选择' })\n            }\n          })\n        })\n      })\n\n      /** 查询字典下拉列表 */\n      getDictOptionselect().then(response => {\n        this.dictOptions = response.data\n      })\n    }\n  },\n  methods: {\n    renderHeadeUpdate(h, { column, $index }) {\n      // h 是一个渲染函数       column 是一个对象表示当前列      $index 第几列\n      return h('div', [\n        h('span', column.label + '  ', { align: 'center', marginTop: '0px' }),\n        h(\n          'el-popover',\n          { props: { placement: 'top-start', width: '270', trigger: 'hover' }},\n          [\n            h('p', '是否在表单编辑时能够编辑，打√表示需要', { class: 'text-align: center; margin: 0' }),\n            // 生成 i 标签 ，添加icon 设置 样式，slot 必填\n            h('i', { class: 'el-icon-question', style: 'color:#ccc,padding-top:5px', slot: 'reference' })\n          ]\n        )\n      ])\n    },\n    renderHeadeList(h, { column, $index }) {\n      // h 是一个渲染函数       column 是一个对象表示当前列      $index 第几列\n      return h('div', [\n        h('span', column.label + '  ', { align: 'center', marginTop: '0px' }),\n        h(\n          'el-popover',\n          { props: { placement: 'top-start', width: '260', trigger: 'hover' }},\n          [\n            h('p', '是否在列表中展示，打√表示需要展示', { class: 'text-align: center; margin: 0' }),\n            h('i', { class: 'el-icon-question', style: 'color:#ccc,padding-top:5px', slot: 'reference' })\n          ]\n        )\n      ])\n    },\n    renderHeadeSearch(h, { column, $index }) {\n      return h('div', [\n        h('span', column.label + '  ', { align: 'center', marginTop: '0px' }),\n        h(\n          'el-popover',\n          { props: { placement: 'top-start', width: '270', trigger: 'hover' }},\n          [\n            h('p', '是都当做搜索条件，打√表示做为搜索条件', { class: 'text-align: center; margin: 0' }),\n            h('i', { class: 'el-icon-question', style: 'color:#ccc,padding-top:5px', slot: 'reference' })\n          ]\n        )\n      ])\n    },\n    handleChangeConfig(row, index) {\n      this.tableTree.filter(function(item) {\n        if (item.tableName === row.fkTableName) {\n          row.fkCol = item.columns\n          // row.fkCol.unshift({ columnId: 0, columnName: '请选择' })\n        }\n      })\n    },\n    /** 提交按钮 */\n    submitForm() {\n      const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n      const genForm = this.$refs.genInfo.$refs.genInfoForm\n\n      Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n        const validateResult = res.every(item => !!item)\n        if (validateResult) {\n          const genTable = Object.assign({}, basicForm.model, genForm.model)\n          genTable.columns = this.columns\n          genTable.params = {\n            treeCode: genTable.treeCode,\n            treeName: genTable.treeName,\n            treeParentCode: genTable.treeParentCode\n          }\n          genTable.isDataScope = JSON.parse(genTable.isDataScope)\n          genTable.isActions = JSON.parse(genTable.isActions)\n          genTable.isAuth = JSON.parse(genTable.isAuth)\n          updateGenTable(genTable).then(res => {\n            this.msgSuccess(res.msg)\n            if (res.code === 200) {\n              this.close()\n            }\n          })\n        } else {\n          this.msgError('表单校验未通过，请重新检查提交内容')\n        }\n      })\n    },\n    getTables() {\n      getTableTree().then(response => {\n        this.tableTree = response.data\n        this.tableTree.unshift({ tableId: 0, className: '请选择' })\n      })\n    },\n    getTablesCol(tableName) {\n      return this.tableTree.filter(function(item) {\n        if (item.tableName === tableName) {\n          return item.columns\n        }\n      })\n    },\n    getFormPromise(form) {\n      return new Promise(resolve => {\n        form.validate(res => {\n          resolve(res)\n        })\n      })\n    },\n    /** 关闭按钮 */\n    close() {\n      this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/dev-tools/gen', query: { t: Date.now() }})\n    }\n  }\n}\n</script>\n"]}]}