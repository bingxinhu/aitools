{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/sys-menu/index.vue?vue&type=style&index=0&id=38230808&lang=css&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/sys-menu/index.vue","mtime":1669257735079},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/css-loader/dist/cjs.js","mtime":1670489672355},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670489672099},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/postcss-loader/src/index.js","mtime":1670489672211},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wYW5lbCAuZWwtdHJhbnNmZXJfX2J1dHRvbnN7CiAgd2lkdGg6IDE1MHB4Owp9Ci5wYW5lbCAuZWwtdHJhbnNmZXJfX2J1dHRvbnMgLmVsLWJ1dHRvbiArIC5lbC1idXR0b257CiAgbWFyZ2luLWxlZnQ6MDsKfQoucGFuZWwgLmVsLXRyYW5zZmVyLXBhbmVsewogIHdpZHRoOiAzMDBweDsKfQoKLmVsLWNvbCB7CnBhZGRpbmc6IDAgNXB4Owp9Ci5lbC1kcmF3ZXJfX2hlYWRlcnsKbWFyZ2luLWJvdHRvbTogMDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/sys-menu","sourcesContent":["<template>\n  <BasicLayout>\n    <template #wrapper>\n      <el-card class=\"box-card\">\n        <el-form :inline=\"true\">\n          <el-form-item label=\"菜单名称\">\n            <el-input\n              v-model=\"queryParams.title\"\n              placeholder=\"请输入菜单名称\"\n              clearable\n              size=\"small\"\n              @keyup.enter.native=\"handleQuery\"\n            />\n          </el-form-item>\n          <el-form-item label=\"状态\">\n            <el-select v-model=\"queryParams.visible\" placeholder=\"菜单状态\" clearable size=\"small\">\n              <el-option\n                v-for=\"dict in visibleOptions\"\n                :key=\"dict.value\"\n                :label=\"dict.label\"\n                :value=\"dict.value\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n            <el-button\n              v-permisaction=\"['admin:sysMenu:add']\"\n              type=\"primary\"\n              icon=\"el-icon-plus\"\n              size=\"mini\"\n              @click=\"handleAdd\"\n            >新增</el-button>\n          </el-form-item>\n        </el-form>\n\n        <el-table\n          v-loading=\"loading\"\n          :data=\"menuList\"\n          border\n          row-key=\"menuId\"\n          :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n        >\n          <el-table-column prop=\"title\" label=\"菜单名称\" :show-overflow-tooltip=\"true\" width=\"180px\" />\n          <el-table-column prop=\"icon\" label=\"图标\" align=\"center\" width=\"100px\">\n            <template slot-scope=\"scope\">\n              <svg-icon :icon-class=\"scope.row.icon\" />\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"sort\" label=\"排序\" width=\"60px\" />\n          <el-table-column prop=\"permission\" label=\"权限标识\" :show-overflow-tooltip=\"true\">\n            <template slot-scope=\"scope\">\n              <el-popover v-if=\"scope.row.sysApi.length>0\" trigger=\"hover\" placement=\"top\">\n                <el-table\n                  :data=\"scope.row.sysApi\"\n                  border\n                  style=\"width: 100%\"\n                >\n                  <el-table-column\n                    prop=\"title\"\n                    label=\"title\"\n                    width=\"260px\"\n                  >\n                    <template slot-scope=\"scope\">\n                      <span v-if=\"scope.row.type=='SYS' && scope.row.title!=''\"><el-tag type=\"success\">{{ '['+scope.row.type +'] '+ scope.row.title }}</el-tag></span>\n                      <span v-if=\"scope.row.type!='SYS' && scope.row.title!=''\"><el-tag type=\"\">{{ '['+scope.row.type +'] '+scope.row.title }}</el-tag></span>\n                      <span v-if=\"scope.row.title==''\"><el-tag type=\"danger\">暂无</el-tag></span>\n\n                    </template>\n                  </el-table-column>\n                  <el-table-column\n                    prop=\"path\"\n                    label=\"path\"\n                    width=\"270px\"\n                  >\n                    <template slot-scope=\"scope\">\n                      <el-tag v-if=\"scope.row.action=='GET'\">{{ scope.row.action }}</el-tag>\n                      <el-tag v-if=\"scope.row.action=='POST'\" type=\"success\">{{ scope.row.action }}</el-tag>\n                      <el-tag v-if=\"scope.row.action=='PUT'\" type=\"warning\">{{ scope.row.action }}</el-tag>\n                      <el-tag v-if=\"scope.row.action=='DELETE'\" type=\"danger\">{{ scope.row.action }}</el-tag>\n                      {{ scope.row.path }}\n                    </template>\n                  </el-table-column>\n\n                </el-table>\n                <div slot=\"reference\" class=\"name-wrapper\">\n                  <span v-if=\"scope.row.permission==''\">-</span>\n                  <span v-else>{{ scope.row.permission }}</span>\n                </div>\n              </el-popover>\n              <span v-else>\n                <span v-if=\"scope.row.permission==''\">-</span>\n                <span v-else>{{ scope.row.permission }}</span>\n              </span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"path\" label=\"组件路径\" :show-overflow-tooltip=\"true\">\n            <template slot-scope=\"scope\">\n              <span v-if=\"scope.row.menuType=='A'\">{{ scope.row.path }}</span>\n              <span v-else>{{ scope.row.component }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"visible\" label=\"可见\" :formatter=\"visibleFormat\" width=\"80\">\n            <template slot-scope=\"scope\">\n              <el-tag\n                :type=\"scope.row.visible === '1' ? 'danger' : 'success'\"\n                disable-transitions\n              >{{ visibleFormat(scope.row) }}</el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建时间\" align=\"center\" prop=\"createdAt\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <span>{{ parseTime(scope.row.createdAt) }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <el-button\n                v-permisaction=\"['admin:sysMenu:edit']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-edit\"\n                @click=\"handleUpdate(scope.row)\"\n              >修改</el-button>\n              <el-button\n                v-permisaction=\"['admin:sysMenu:add']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-plus\"\n                @click=\"handleAdd(scope.row)\"\n              >新增</el-button>\n              <el-button\n                v-permisaction=\"['admin:sysMenu:remove']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDelete(scope.row)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <!-- 添加或修改菜单对话框 -->\n        <el-drawer\n          ref=\"drawer\"\n          :title=\"title\"\n          :before-close=\"cancel\"\n          :visible.sync=\"open\"\n          direction=\"rtl\"\n          custom-class=\"demo-drawer\"\n          size=\"830px\"\n        >\n          <div class=\"demo-drawer__content\">\n            <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-position=\"top\" label-width=\"106px\">\n              <el-row>\n                <el-col :span=\"24\">\n                  <el-form-item prop=\"parentId\">\n                    <span slot=\"label\">\n                      上级菜单\n                      <el-tooltip content=\"指当前菜单停靠的菜单归属\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <treeselect\n                      v-model=\"form.parentId\"\n                      :options=\"menuOptions\"\n                      :normalizer=\"normalizer\"\n                      :show-count=\"true\"\n                      placeholder=\"选择上级菜单\"\n                    />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item prop=\"title\">\n                    <span slot=\"label\">\n                      菜单标题\n                      <el-tooltip content=\"菜单位置显示的说明信息\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input v-model=\"form.title\" placeholder=\"请输入菜单标题\" />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item prop=\"sort\">\n                    <span slot=\"label\">\n                      显示排序\n                      <el-tooltip content=\"根据序号升序排列\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input-number v-model=\"form.sort\" controls-position=\"right\" :min=\"0\" />\n                  </el-form-item>\n                </el-col>\n\n                <el-col :span=\"24\">\n                  <el-form-item prop=\"menuType\">\n                    <span slot=\"label\">\n                      菜单类型\n                      <el-tooltip content=\"包含目录：以及菜单或者菜单组，菜单：具体对应某一个页面，按钮：功能才做按钮；\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-radio-group v-model=\"form.menuType\">\n                      <el-radio label=\"M\">目录</el-radio>\n                      <el-radio label=\"C\">菜单</el-radio>\n                      <el-radio label=\"F\">按钮</el-radio>\n                    </el-radio-group>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"24\">\n                  <el-form-item label=\"菜单图标\">\n                    <el-popover\n                      placement=\"bottom-start\"\n                      width=\"460\"\n                      trigger=\"click\"\n                      @show=\"$refs['iconSelect'].reset()\"\n                    >\n                      <IconSelect ref=\"iconSelect\" @selected=\"selected\" />\n                      <el-input slot=\"reference\" v-model=\"form.icon\" placeholder=\"点击选择图标\" readonly>\n                        <svg-icon\n                          v-if=\"form.icon\"\n                          slot=\"prefix\"\n                          :icon-class=\"form.icon\"\n                          class=\"el-input__icon\"\n                          style=\"height: 32px;width: 16px;\"\n                        />\n                        <i v-else slot=\"prefix\" class=\"el-icon-search el-input__icon\" />\n                      </el-input>\n                    </el-popover>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item v-if=\"form.menuType == 'M' || form.menuType == 'C'\" prop=\"menuName\">\n                    <span slot=\"label\">\n                      路由名称\n                      <el-tooltip content=\"需要和页面name保持一致，对应页面即可选择缓存\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input v-model=\"form.menuName\" placeholder=\"请输入路由名称\" />\n                  </el-form-item>\n                </el-col>\n\n                <el-col v-if=\"form.menuType == 'M' || form.menuType == 'C'\" :span=\"12\">\n                  <el-form-item prop=\"component\">\n                    <span slot=\"label\">\n                      组件路径\n                      <el-tooltip content=\"菜单对应的具体vue页面文件路径views的下级路径/admin/sys-api/index；目录类型：填写Layout，如何有二级目录请参照日志目录填写；\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input v-model=\"form.component\" placeholder=\"请输入组件路径\" />\n                  </el-form-item>\n                </el-col>\n\n                <el-col :span=\"12\">\n                  <el-form-item v-if=\"form.menuType == 'M' || form.menuType == 'C'\">\n                    <span slot=\"label\">\n                      是否外链\n                      <el-tooltip content=\"可以通过iframe打开指定地址\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-radio-group v-model=\"form.isFrame\">\n                      <el-radio label=\"0\">是</el-radio>\n                      <el-radio label=\"1\">否</el-radio>\n                    </el-radio-group>\n                  </el-form-item>\n                </el-col>\n\n                <el-col :span=\"12\">\n                  <el-form-item v-if=\"form.menuType != 'F'\" prop=\"path\">\n                    <span slot=\"label\">\n                      路由地址\n                      <el-tooltip content=\"访问此页面自定义的url地址，建议/开头书写，例如 /app-name/menu-name\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input v-model=\"form.path\" placeholder=\"请输入路由地址\" />\n                  </el-form-item>\n                </el-col>\n\n                <el-col :span=\"12\">\n                  <el-form-item v-if=\"form.menuType == 'F' || form.menuType == 'C'\">\n                    <span slot=\"label\">\n                      权限标识\n                      <el-tooltip content=\"前端权限控制按钮是否显示\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-input v-model=\"form.permission\" placeholder=\"请权限标识\" maxlength=\"50\" />\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-form-item v-if=\"form.menuType != 'F'\">\n                    <span slot=\"label\">\n                      菜单状态\n                      <el-tooltip content=\"需要显示在菜单列表的菜单设置为显示，否则设置为隐藏\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-radio-group v-model=\"form.visible\">\n                      <el-radio\n                        v-for=\"dict in visibleOptions\"\n                        :key=\"dict.value\"\n                        :label=\"dict.value\"\n                      >{{ dict.label }}</el-radio>\n                    </el-radio-group>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"24\">\n                  <el-form-item v-if=\"form.menuType == 'F' || form.menuType == 'C'\">\n                    <span slot=\"label\">\n                      api权限\n                      <el-tooltip content=\"配置在这个才做上需要使用到的接口，否则在设置用户角色时，接口将无权访问。\" placement=\"top\">\n                        <i class=\"el-icon-question\" />\n                      </el-tooltip>\n                    </span>\n                    <el-transfer\n                      v-model=\"form.apis\"\n                      style=\"text-align: left; display: inline-block\"\n                      filterable\n                      :props=\"{\n                        key: 'id',\n                        label: 'title'\n                      }\"\n                      :titles=\"['未授权', '已授权']\"\n                      :button-texts=\"['收回', '授权 ']\"\n                      :format=\"{\n                        noChecked: '${total}',\n                        hasChecked: '${checked}/${total}'\n                      }\"\n                      class=\"panel\"\n                      :data=\"sysapiList\"\n                      @change=\"handleChange\"\n                    >\n                      <span slot-scope=\"{ option }\">{{ option.title }}</span>\n                    </el-transfer>\n                  </el-form-item>\n                </el-col>\n              </el-row>\n            </el-form>\n            <div class=\"demo-drawer__footer\">\n              <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n              <el-button @click=\"cancel\">取 消</el-button>\n            </div>\n          </div>\n\n        </el-drawer>\n      </el-card>\n    </template>\n  </BasicLayout>\n</template>\n\n<script>\nimport { listMenu, getMenu, delMenu, addMenu, updateMenu } from '@/api/admin/sys-menu'\nimport { listSysApi } from '@/api/admin/sys-api'\n\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport IconSelect from '@/components/IconSelect'\n\nexport default {\n  name: 'SysMenuManage',\n  components: { Treeselect, IconSelect },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 菜单表格树数据\n      menuList: [],\n      sysapiList: [],\n      // 菜单树选项\n      menuOptions: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 菜单状态数据字典\n      visibleOptions: [],\n      // 查询参数\n      queryParams: {\n        title: undefined,\n        visible: undefined\n      },\n      // 表单参数\n      form: {\n        apis: [],\n        sysApi: []\n      },\n      // 表单校验\n      rules: {\n        title: [{ required: true, message: '菜单标题不能为空', trigger: 'blur' }],\n        sort: [{ required: true, message: '菜单顺序不能为空', trigger: 'blur' }]\n      }\n    }\n  },\n  created() {\n    this.getList()\n\n    this.getApiList()\n    this.getDicts('sys_show_hide').then(response => {\n      this.visibleOptions = response.data\n    })\n  },\n  methods: {\n    handleChange(value, direction, movedKeys) {\n      console.log(value, direction, movedKeys)\n      const list = this.form.sysApi\n      this.form.apis = value\n      if (direction === 'right') {\n        for (let x = 0; x < movedKeys.length; x++) {\n          for (let index = 0; index < this.sysapiList.length; index++) {\n            const element = this.sysapiList[index]\n            if (element.id === movedKeys[x]) {\n              list.push(element)\n              break\n            }\n          }\n        }\n        this.form.sysApi = list\n      } else if (direction === 'left') {\n        const l = []\n        for (let index = 0; index < movedKeys.length; index++) {\n          const element = movedKeys[index]\n          for (let x = 0; x < list.length; x++) {\n            const e = list[x]\n            if (element !== e.id) {\n              l.push()\n              break\n            }\n          }\n        }\n        this.form.sysApi = l\n      }\n      // this.setApis(this.form.SysApi)\n      console.log(this.form.sysApi)\n    },\n    getApiList() {\n      this.loading = true\n      listSysApi({ 'pageSize': 10000, 'type': 'BUS' }).then(response => {\n        this.sysapiList = response.data.list\n        this.loading = false\n      }\n      )\n    },\n    handleClose(done) {\n      // if (this.loading) {\n      //   return\n      // }\n      // this.$confirm('需要提交表单吗？')\n      //   .then(_ => {\n      //     this.loading = true\n      //     this.timer = setTimeout(() => {\n      //       done()\n      //       // 动画关闭需要一定的时间\n      //       setTimeout(() => {\n      //         this.loading = false\n      //       }, 400)\n      //     }, 1000)\n      //   })\n      //   .catch(_ => {})\n    },\n    // 选择图标\n    selected(name) {\n      this.form.icon = name\n    },\n    /** 查询菜单列表 */\n    getList() {\n      this.loading = true\n      listMenu(this.queryParams).then(response => {\n        this.menuList = response.data\n        this.loading = false\n      })\n    },\n    /** 转换菜单数据结构 */\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children\n      }\n      return {\n        id: node.menuId,\n        label: node.title,\n        children: node.children\n      }\n    },\n    /** 查询菜单下拉树结构 */\n    getTreeselect() {\n      listMenu().then(response => {\n        this.menuOptions = []\n        const menu = { menuId: 0, title: '主类目', children: [] }\n        menu.children = response.data\n        this.menuOptions.push(menu)\n      })\n    },\n    // 菜单显示状态字典翻译\n    visibleFormat(row) {\n      if (row.menuType === 'F') {\n        return '-- --'\n      }\n      return this.selectDictLabel(this.visibleOptions, row.visible)\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        menuId: undefined,\n        parentId: 0,\n        menuName: undefined,\n        icon: undefined,\n        menuType: 'M',\n        apis: [],\n        sort: 0,\n        action: this.form.menuType === 'A' ? this.form.action : '',\n        isFrame: '1',\n        visible: '0'\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.getList()\n    },\n    /** 新增按钮操作 */\n    handleAdd(row) {\n      this.reset()\n      this.getTreeselect()\n      if (row != null) {\n        this.form.parentId = row.menuId\n      }\n      this.open = true\n      this.title = '添加菜单'\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      this.getTreeselect()\n      getMenu(row.menuId).then(response => {\n        this.form = response.data\n        this.open = true\n        this.title = '修改菜单'\n      })\n    },\n    setApis(apiArray) {\n      var l = []\n      for (var index = 0; index < apiArray.length; index++) {\n        const element = apiArray[index]\n        l.push(element.id)\n      }\n      this.form.apis = l\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.menuId !== undefined) {\n            updateMenu(this.form, this.form.menuId).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addMenu(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      this.$confirm('是否确认删除名称为\"' + row.title + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        var Ids = (row.menuId && [row.menuId]) || this.ids\n        return delMenu({ 'ids': Ids })\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    }\n  }\n}\n</script>\n<style lang=\"css\">\n.panel .el-transfer__buttons{\n  width: 150px;\n}\n.panel .el-transfer__buttons .el-button + .el-button{\n  margin-left:0;\n}\n.panel .el-transfer-panel{\n  width: 300px;\n}\n\n.el-col {\npadding: 0 5px;\n}\n.el-drawer__header{\nmargin-bottom: 0;\n}\n</style>\n"]}]}