{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/sys-post/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/sys-post/index.vue","mtime":1669257735079},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/views/admin/sys-post","sourcesContent":["<template>\n  <BasicLayout>\n    <template #wrapper>\n      <el-card class=\"box-card\">\n        <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\" label-width=\"68px\">\n          <el-form-item label=\"岗位编码\" prop=\"postCode\">\n            <el-input\n              v-model=\"queryParams.postCode\"\n              placeholder=\"请输入岗位编码\"\n              clearable\n              size=\"small\"\n              @keyup.enter.native=\"handleQuery\"\n            />\n          </el-form-item>\n          <el-form-item label=\"岗位名称\" prop=\"postName\">\n            <el-input\n              v-model=\"queryParams.postName\"\n              placeholder=\"请输入岗位名称\"\n              clearable\n              size=\"small\"\n              @keyup.enter.native=\"handleQuery\"\n            />\n          </el-form-item>\n          <el-form-item label=\"状态\" prop=\"status\">\n            <el-select v-model=\"queryParams.status\" placeholder=\"岗位状态\" clearable size=\"small\">\n              <el-option\n                v-for=\"dict in statusOptions\"\n                :key=\"dict.value\"\n                :label=\"dict.label\"\n                :value=\"dict.value\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n          </el-form-item>\n        </el-form>\n\n        <el-row :gutter=\"10\" class=\"mb8\">\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysPost:add']\"\n              type=\"primary\"\n              icon=\"el-icon-plus\"\n              size=\"mini\"\n              @click=\"handleAdd\"\n            >新增</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysPost:edit']\"\n              type=\"success\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              :disabled=\"single\"\n              @click=\"handleUpdate\"\n            >修改</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysPost:remove']\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              :disabled=\"multiple\"\n              @click=\"handleDelete\"\n            >删除</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysPost:export']\"\n              type=\"warning\"\n              icon=\"el-icon-download\"\n              size=\"mini\"\n              @click=\"handleExport\"\n            >导出</el-button>\n          </el-col>\n        </el-row>\n\n        <el-table v-loading=\"loading\" :data=\"postList\" border @selection-change=\"handleSelectionChange\">\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n          <el-table-column label=\"岗位编号\" width=\"80\" align=\"center\" prop=\"postId\" />\n          <el-table-column label=\"岗位编码\" align=\"center\" prop=\"postCode\" />\n          <el-table-column label=\"岗位名称\" align=\"center\" prop=\"postName\" />\n          <el-table-column label=\"岗位排序\" align=\"center\" prop=\"sort\" />\n          <el-table-column label=\"状态\" align=\"center\" prop=\"status\" :formatter=\"statusFormat\">\n            <template slot-scope=\"scope\">\n              <el-tag\n                :type=\"scope.row.status === 1 ? 'danger' : 'success'\"\n                disable-transitions\n              >{{ statusFormat(scope.row) }}</el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建时间\" align=\"center\" prop=\"createdAt\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <span>{{ parseTime(scope.row.createdAt) }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n            <template slot-scope=\"scope\">\n              <el-button\n                v-permisaction=\"['admin:sysPost:edit']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-edit\"\n                @click=\"handleUpdate(scope.row)\"\n              >修改</el-button>\n              <el-button\n                v-permisaction=\"['admin:sysPost:remove']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDelete(scope.row)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <pagination\n          v-show=\"total>0\"\n          :total=\"total\"\n          :page.sync=\"queryParams.pageIndex\"\n          :limit.sync=\"queryParams.pageSize\"\n          @pagination=\"getList\"\n        />\n\n        <!-- 添加或修改岗位对话框 -->\n        <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" :close-on-click-modal=\"false\">\n          <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n            <el-form-item label=\"岗位名称\" prop=\"postName\">\n              <el-input v-model=\"form.postName\" placeholder=\"请输入岗位名称\" />\n            </el-form-item>\n            <el-form-item label=\"岗位编码\" prop=\"postCode\">\n              <el-input v-model=\"form.postCode\" placeholder=\"请输入编码名称\" />\n            </el-form-item>\n            <el-form-item label=\"岗位顺序\" prop=\"sort\">\n              <el-input-number v-model=\"form.sort\" controls-position=\"right\" :min=\"0\" />\n            </el-form-item>\n            <el-form-item label=\"岗位状态\" prop=\"status\">\n              <el-radio-group v-model=\"form.status\">\n                <el-radio\n                  v-for=\"dict in statusOptions\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                >{{ dict.label }}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n            <el-button @click=\"cancel\">取 消</el-button>\n          </div>\n        </el-dialog>\n      </el-card>\n    </template>\n  </BasicLayout>\n</template>\n\n<script>\nimport { listPost, getPost, delPost, addPost, updatePost } from '@/api/admin/sys-post'\nimport { formatJson } from '@/utils'\n\nexport default {\n  name: 'SysPostManage',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 岗位表格数据\n      postList: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        postCode: undefined,\n        postName: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        postName: [\n          { required: true, message: '岗位名称不能为空', trigger: 'blur' }\n        ],\n        postCode: [\n          { required: true, message: '岗位编码不能为空', trigger: 'blur' }\n        ],\n        sort: [\n          { required: true, message: '岗位顺序不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n    this.getDicts('sys_normal_disable').then(response => {\n      this.statusOptions = response.data\n    })\n  },\n  methods: {\n    /** 查询岗位列表 */\n    getList() {\n      this.loading = true\n      listPost(this.queryParams).then(response => {\n        this.postList = response.data.list\n        this.total = response.data.count\n        this.loading = false\n      })\n    },\n    // 岗位状态字典翻译\n    statusFormat(row) {\n      return this.selectDictLabel(this.statusOptions, row.status)\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        postId: undefined,\n        postCode: undefined,\n        postName: undefined,\n        sort: 0,\n        status: '1',\n        remark: undefined\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageIndex = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.postId)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.open = true\n      this.title = '添加岗位'\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n\n      const postId = row.postId || this.ids\n      getPost(postId).then(response => {\n        this.form = response.data\n        this.form.status = String(this.form.status)\n        this.open = true\n        this.title = '修改岗位'\n      })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.form.status = parseInt(this.form.status)\n          if (this.form.postId !== undefined) {\n            updatePost(this.form, this.form.postId).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addPost(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      // const postIds = row.postId || this.ids\n      const Ids = (row.postId && [row.postId]) || this.ids\n      this.$confirm('是否确认删除岗位编号为\"' + Ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delPost({ 'ids': Ids })\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      // const queryParams = this.queryParams\n      this.$confirm('是否确认导出所有岗位数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.downloadLoading = true\n        import('@/vendor/Export2Excel').then(excel => {\n          const tHeader = ['岗位编号', '岗位编码', '岗位名称', '排序', '创建时间']\n          const filterVal = ['postId', 'postCode', 'postName', 'sort', 'createdAt']\n          const list = this.postList\n          const data = formatJson(filterVal, list)\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: '岗位管理',\n            autoWidth: true, // Optional\n            bookType: 'xlsx' // Optional\n          })\n          this.downloadLoading = false\n        })\n      }).catch(function() {})\n    }\n  }\n}\n</script>\n"]}]}