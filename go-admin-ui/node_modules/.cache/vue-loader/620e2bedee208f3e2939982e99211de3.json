{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/schedule/log.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/schedule/log.vue","mtime":1669257735083},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgeyB1bldzTG9nb3V0IH0gZnJvbSAnQC9hcGkvd3MnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU3lzSm9iTG9nTWFuYWdlJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgd2Vic29jazogbnVsbCwKICAgICAgYXJyczogW10sCiAgICAgIGlkOiB1bmRlZmluZWQsCiAgICAgIGdyb3VwOiB1bmRlZmluZWQKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmlkID0gdGhpcy5ndWlkKCkKICAgIHRoaXMuZ3JvdXAgPSAnbG9nJwogICAgdGhpcy5pbml0V2ViU29ja2V0KCkKICB9LAogIGRlc3Ryb3llZCgpIHsKICAgIGNvbnNvbGUubG9nKCfmlq3lvIB3ZWJzb2NrZXTov57mjqUnKQogICAgdGhpcy53ZWJzb2NrLmNsb3NlKCkgLy8g56a75byA6Lev55Sx5LmL5ZCO5pat5byAd2Vic29ja2V06L+e5o6lCiAgICB1bldzTG9nb3V0KHRoaXMuaWQsIHRoaXMuZ3JvdXApLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKQogICAgfQogICAgKQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdFdlYlNvY2tldCgpIHsgLy8g5Yid5aeL5YyWd2Vvc29ja2V0CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudG9rZW4pCiAgICAgIGNvbnN0IHdzdXJpID0gJ3dzOi8vMTI3LjAuMC4xOjgwMDAvd3MvJyArIHRoaXMuaWQgKyAnLycgKyB0aGlzLmdyb3VwICsgJz90b2tlbj0nICsgdGhpcy4kc3RvcmUuc3RhdGUudXNlci50b2tlbgogICAgICB0aGlzLndlYnNvY2sgPSBuZXcgV2ViU29ja2V0KHdzdXJpKQogICAgICB0aGlzLndlYnNvY2sub25tZXNzYWdlID0gdGhpcy53ZWJzb2NrZXRvbm1lc3NhZ2UKICAgICAgdGhpcy53ZWJzb2NrLm9ub3BlbiA9IHRoaXMud2Vic29ja2V0b25vcGVuCiAgICAgIHRoaXMud2Vic29jay5vbmVycm9yID0gdGhpcy53ZWJzb2NrZXRvbmVycm9yCiAgICAgIHRoaXMud2Vic29jay5vbmNsb3NlID0gdGhpcy53ZWJzb2NrZXRjbG9zZQogICAgfSwKICAgIHdlYnNvY2tldG9ub3BlbigpIHsgLy8g6L+e5o6l5bu656uL5LmL5ZCO5omn6KGMc2VuZOaWueazleWPkemAgeaVsOaNrgogICAgICBjb25zb2xlLmxvZygn6L+e5o6l5omT5byAJykKICAgIC8vICAgY29uc3QgYWN0aW9ucyA9IHsgJ3Rlc3QnOiAnMTIzNDUnIH0KICAgIC8vICAgdGhpcy53ZWJzb2NrZXRzZW5kKEpTT04uc3RyaW5naWZ5KGFjdGlvbnMpKQogICAgfSwKICAgIHdlYnNvY2tldG9uZXJyb3IoKSB7IC8vIOi/nuaOpeW7uueri+Wksei0pemHjei/ngogICAgICB0aGlzLmluaXRXZWJTb2NrZXQoKQogICAgfSwKICAgIHdlYnNvY2tldG9ubWVzc2FnZShlKSB7IC8vIOaVsOaNruaOpeaUtgogICAgICBjb25zb2xlLmxvZyhlLmRhdGEpCiAgICAgIC8vICAgY29uc29sZS5sb2codGhpcy5iaW5hcnlBZ2VudChlKSkKICAgICAgLy8gICBjb25zdCByZWRhdGEgPSBKU09OLnBhcnNlKGUuZGF0YSkKICAgICAgLy8gICBjb25zb2xlLmxvZyhyZWRhdGEpCiAgICAgIC8vICAgdGhpcy4kcmVmcy5sb2cuaW5uZXJUZXh0ID0gZS5kYXRhICsgJ1xuJyArIHRoaXMuJHJlZnMubG9nLmlubmVyVGV4dAogICAgICB0aGlzLmFycnMudW5zaGlmdChlLmRhdGEpCiAgICB9LAogICAgd2Vic29ja2V0c2VuZChEYXRhKSB7IC8vIOaVsOaNruWPkemAgQogICAgLy8gICB0aGlzLndlYnNvY2suc2VuZChEYXRhKQogICAgfSwKICAgIHdlYnNvY2tldGNsb3NlKGUpIHsgLy8g5YWz6ZetCiAgICAgIHVuV3NMb2dvdXQodGhpcy5pZCwgdGhpcy5ncm91cCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkKICAgICAgfQogICAgICApCiAgICAgIGNvbnNvbGUubG9nKCfmlq3lvIDov57mjqUnLCBlKQogICAgfSwKICAgIGd1aWQoKSB7CiAgICAgIHJldHVybiAneHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uKGMpIHsKICAgICAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDA7IHZhciB2ID0gYyA9PT0gJ3gnID8gciA6IChyICYgMHgzIHwgMHg4KQogICAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KQogICAgICB9KQogICAgfQogIH0KfQoK"},{"version":3,"sources":["log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"log.vue","sourceRoot":"src/views/schedule","sourcesContent":["\n<template>\n  <BasicLayout>\n    <template #wrapper>\n      <el-card class=\"box-card\">\n        <el-form>\n          <el-form-item>\n            <el-button type=\"success\" icon=\"el-icon-search\" size=\"mini\">状态</el-button>\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\">清空</el-button>\n          </el-form-item>\n        </el-form>\n        <el-row ref=\"log\" :gutter=\"10\" class=\"mb8\">\n          <el-scrollbar style=\"height:500px;background-color: black;color: cornflowerblue;\">\n            <ul\n              style=\"line-height: 25px;padding-top: 15px;padding-bottom: 15px;min-height: 500px; margin: 0;list-style-type: none;\"\n            >\n              <li v-for=\"(item,index) in arrs\" :key=\"index\">\n\n                {{ item }}\n              </li>\n            </ul>\n          </el-scrollbar>\n        </el-row>\n      </el-card>\n    </template>\n  </BasicLayout>\n\n</template>\n\n<script>\n\nimport { unWsLogout } from '@/api/ws'\nexport default {\n  name: 'SysJobLogManage',\n  data() {\n    return {\n      websock: null,\n      arrs: [],\n      id: undefined,\n      group: undefined\n    }\n  },\n  created() {\n    this.id = this.guid()\n    this.group = 'log'\n    this.initWebSocket()\n  },\n  destroyed() {\n    console.log('断开websocket连接')\n    this.websock.close() // 离开路由之后断开websocket连接\n    unWsLogout(this.id, this.group).then(response => {\n      console.log(response.data)\n    }\n    )\n  },\n  methods: {\n    initWebSocket() { // 初始化weosocket\n      console.log(this.$store.state.user.token)\n      const wsuri = 'ws://127.0.0.1:8000/ws/' + this.id + '/' + this.group + '?token=' + this.$store.state.user.token\n      this.websock = new WebSocket(wsuri)\n      this.websock.onmessage = this.websocketonmessage\n      this.websock.onopen = this.websocketonopen\n      this.websock.onerror = this.websocketonerror\n      this.websock.onclose = this.websocketclose\n    },\n    websocketonopen() { // 连接建立之后执行send方法发送数据\n      console.log('连接打开')\n    //   const actions = { 'test': '12345' }\n    //   this.websocketsend(JSON.stringify(actions))\n    },\n    websocketonerror() { // 连接建立失败重连\n      this.initWebSocket()\n    },\n    websocketonmessage(e) { // 数据接收\n      console.log(e.data)\n      //   console.log(this.binaryAgent(e))\n      //   const redata = JSON.parse(e.data)\n      //   console.log(redata)\n      //   this.$refs.log.innerText = e.data + '\\n' + this.$refs.log.innerText\n      this.arrs.unshift(e.data)\n    },\n    websocketsend(Data) { // 数据发送\n    //   this.websock.send(Data)\n    },\n    websocketclose(e) { // 关闭\n      unWsLogout(this.id, this.group).then(response => {\n        console.log(response.data)\n      }\n      )\n      console.log('断开连接', e)\n    },\n    guid() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0; var v = c === 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n      })\n    }\n  }\n}\n\n</script>\n"]}]}