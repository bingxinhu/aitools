{"remainingRequest":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/dict/data.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/src/views/admin/dict/data.vue","mtime":1669257735079},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/babel-loader/lib/index.js","mtime":1670489673015},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/cache-loader/dist/cjs.js","mtime":1670489672947},{"path":"/home/cxhpc/workroot_lfs/goadmin/go-admin-ui/node_modules/vue-loader/lib/index.js","mtime":1670489672091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["data.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"data.vue","sourceRoot":"src/views/admin/dict","sourcesContent":["<template>\n  <BasicLayout>\n    <template #wrapper>\n      <el-card class=\"box-card\">\n        <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\">\n          <el-form-item label=\"字典名称\" prop=\"dictType\">\n            <el-select v-model=\"queryParams.dictType\" size=\"small\">\n              <el-option\n                v-for=\"item in typeOptions\"\n                :key=\"item.dictId\"\n                :label=\"item.dictName\"\n                :value=\"item.dictType\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"字典标签\" prop=\"dictLabel\">\n            <el-input\n              v-model=\"queryParams.dictLabel\"\n              placeholder=\"请输入字典标签\"\n              clearable\n              size=\"small\"\n              @keyup.enter.native=\"handleQuery\"\n            />\n          </el-form-item>\n          <el-form-item label=\"状态\" prop=\"status\">\n            <el-select v-model=\"queryParams.status\" placeholder=\"数据状态\" clearable size=\"small\">\n              <el-option\n                v-for=\"dict in statusOptions\"\n                :key=\"dict.value\"\n                :label=\"dict.label\"\n                :value=\"dict.value\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n          </el-form-item>\n        </el-form>\n\n        <el-row :gutter=\"10\" class=\"mb8\">\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysDictData:add']\"\n              type=\"primary\"\n              icon=\"el-icon-plus\"\n              size=\"mini\"\n              @click=\"handleAdd\"\n            >新增</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysDictData:edit']\"\n              type=\"success\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              :disabled=\"single\"\n              @click=\"handleUpdate\"\n            >修改</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              v-permisaction=\"['admin:sysDictData:remove']\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              :disabled=\"multiple\"\n              @click=\"handleDelete\"\n            >删除</el-button>\n          </el-col>\n        </el-row>\n\n        <el-table v-loading=\"loading\" :data=\"dataList\" border @selection-change=\"handleSelectionChange\">\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n          <el-table-column label=\"字典编码\" width=\"80\" align=\"center\" prop=\"dictCode\" />\n          <el-table-column label=\"字典标签\" align=\"center\" prop=\"dictLabel\" />\n          <el-table-column label=\"字典键值\" align=\"center\" prop=\"dictValue\" />\n          <el-table-column label=\"字典排序\" align=\"center\" prop=\"dictSort\" />\n          <el-table-column label=\"状态\" align=\"center\" prop=\"status\" :formatter=\"statusFormat\" />\n          <el-table-column label=\"备注\" align=\"center\" prop=\"remark\" :show-overflow-tooltip=\"true\" />\n          <el-table-column label=\"创建时间\" align=\"center\" prop=\"createdAt\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <span>{{ parseTime(scope.row.createdAt) }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n            <template slot-scope=\"scope\">\n              <el-button\n                v-permisaction=\"['admin:sysDictData:edit']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-edit\"\n                @click=\"handleUpdate(scope.row)\"\n              >修改</el-button>\n              <el-button\n                v-permisaction=\"['admin:sysDictData:remove']\"\n                size=\"mini\"\n                type=\"text\"\n                icon=\"el-icon-delete\"\n                @click=\"handleDelete(scope.row)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <pagination\n          v-show=\"total>0\"\n          :total=\"total\"\n          :page.sync=\"queryParams.pageIndex\"\n          :limit.sync=\"queryParams.pageSize\"\n          @pagination=\"getList\"\n        />\n\n        <!-- 添加或修改参数配置对话框 -->\n        <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" :close-on-click-modal=\"false\">\n          <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n            <el-form-item label=\"字典类型\">\n              <el-input v-model=\"form.dictType\" :disabled=\"true\" />\n            </el-form-item>\n            <el-form-item label=\"数据标签\" prop=\"dictLabel\">\n              <el-input v-model=\"form.dictLabel\" placeholder=\"请输入数据标签\" :disabled=\"isEdit\" />\n            </el-form-item>\n            <el-form-item label=\"数据键值\" prop=\"dictValue\">\n              <el-input v-model=\"form.dictValue\" placeholder=\"请输入数据键值\" :disabled=\"isEdit\" />\n            </el-form-item>\n            <el-form-item label=\"显示排序\" prop=\"dictSort\">\n              <el-input-number v-model=\"form.dictSort\" controls-position=\"right\" :min=\"0\" />\n            </el-form-item>\n            <el-form-item label=\"状态\" prop=\"status\">\n              <el-radio-group v-model=\"form.status\">\n                <el-radio\n                  v-for=\"dict in statusOptions\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                >{{ dict.label }}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n            <el-button @click=\"cancel\">取 消</el-button>\n          </div>\n        </el-dialog>\n      </el-card>\n    </template>\n  </BasicLayout>\n</template>\n\n<script>\nimport { listData, getData, delData, addData, updateData, exportData } from '@/api/admin/dict/data'\nimport { listType, getType } from '@/api/admin/dict/type'\n\nexport default {\n  name: 'SysDictDataManage',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 字典表格数据\n      dataList: [],\n      // 默认字典类型\n      defaultDictType: '',\n      // 弹出层标题\n      title: '',\n      isEdit: false,\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 类型数据字典\n      typeOptions: [],\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        dictName: undefined,\n        dictType: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        dictLabel: [\n          { required: true, message: '数据标签不能为空', trigger: 'blur' }\n        ],\n        dictValue: [\n          { required: true, message: '数据键值不能为空', trigger: 'blur' }\n        ],\n        dictSort: [\n          { required: true, message: '数据顺序不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    const dictId = this.$route.params && this.$route.params.dictId\n    this.getType(dictId)\n    this.getTypeList()\n    this.getDicts('sys_normal_disable').then(response => {\n      this.statusOptions = response.data\n    })\n  },\n  methods: {\n    /** 查询字典类型详细 */\n    getType(dictId) {\n      getType(dictId).then(response => {\n        this.queryParams.dictType = response.data.dictType\n        this.defaultDictType = response.data.dictType\n        this.getList()\n      })\n    },\n    /** 查询字典类型列表 */\n    getTypeList() {\n      listType({ pageSize: 1000 }).then(response => {\n        this.typeOptions = response.data.list\n      })\n    },\n    /** 查询字典数据列表 */\n    getList() {\n      this.loading = true\n      listData(this.queryParams).then(response => {\n        this.dataList = response.data.list\n        this.total = response.data.count\n        this.loading = false\n      })\n    },\n    // 数据状态字典翻译\n    statusFormat(row, column) {\n      return this.selectDictLabel(this.statusOptions, row.status)\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        dictCode: undefined,\n        dictLabel: undefined,\n        dictValue: undefined,\n        dictSort: 0,\n        status: '2',\n        remark: undefined\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageIndex = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm('queryForm')\n      this.queryParams.dictType = this.defaultDictType\n      this.handleQuery()\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.open = true\n      this.title = '添加字典数据'\n      this.isEdit = false\n      this.form.dictType = this.queryParams.dictType\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.dictCode)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      const dictCode = row.dictCode || this.ids\n      getData(dictCode).then(response => {\n        this.form = response.data\n        this.form.status = String(this.form.status)\n        this.open = true\n        this.title = '修改字典数据'\n        this.isEdit = true\n      })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.form.status = parseInt(this.form.status)\n          if (this.form.dictCode !== undefined) {\n            updateData(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addData(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(response.msg)\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const dictCodes = (row.dictCode && [row.dictCode]) || this.ids\n      this.$confirm('是否确认删除字典编码为\"' + dictCodes + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delData({ 'ids': dictCodes })\n      }).then((response) => {\n        if (response.code === 200) {\n          this.msgSuccess(response.msg)\n          this.open = false\n          this.getList()\n        } else {\n          this.msgError(response.msg)\n        }\n      }).catch(function() {})\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams\n      this.$confirm('是否确认导出所有数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return exportData(queryParams)\n      }).then(response => {\n        this.download(response.msg)\n      }).catch(function() {})\n    }\n  }\n}\n</script>\n"]}]}